{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_createElementVNode","_hoisted_1"],"sources":["C:\\Users\\Youcode\\Desktop\\FLLLROUGE\\vue\\src\\components\\Admin\\AppChartUser.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <canvas ref=\"chart\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from 'chart.js';\r\nimport axios from 'axios';\r\nimport { useStore } from '../../store';\r\nimport planetChartData from '../../planet-dataUser';\r\n\r\nexport default {\r\n  name: 'PlanetChartUser',\r\n  data() {\r\n    return {\r\n      planetChartData: planetChartData,\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.updateChart();\r\n  },\r\n  methods: {\r\n    async updateChart() {\r\n      const store = useStore();\r\n      await axios.get(`${store.URL}statiqueAdmin`,{\r\n        headers: { 'Authorization': `Bearer ${store.token}` }\r\n      })\r\n      .then(response => {\r\n        this.planetChartData.data.datasets[0].data = response.data.statisticsUser;\r\n        if (this.chart) {\r\n          this.chart.update();\r\n        } else {\r\n          const ctx = this.$refs.chart.getContext('2d');\r\n          this.chart = new Chart(ctx, this.planetChartData);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;EAEYA,GAAG,EAAC;AAAO;;uBADrBC,mBAAA,CAEM,cADJC,mBAAA,CAA6B,UAA7BC,UAA6B,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}