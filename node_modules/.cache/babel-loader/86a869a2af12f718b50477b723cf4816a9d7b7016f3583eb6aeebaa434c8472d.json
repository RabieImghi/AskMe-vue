{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useUserStore } from '../../store';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      emailErroe: false,\n      passwordErroe: false,\n      errorsRequire: \"\",\n      errorsTest: false\n    };\n  },\n  methods: {\n    togleInputPassword() {\n      let input = document.getElementById('password');\n      let svg = document.querySelector('svg');\n      if (input.type === 'password') {\n        input.type = 'text';\n        svg.style.fill = 'blue';\n      } else {\n        input.type = 'password';\n        svg.style.fill = 'currentColor';\n      }\n    },\n    showAlert(message, icone) {\n      Swal.fire({\n        position: 'bottom-end',\n        icon: icone,\n        title: message,\n        showConfirmButton: false,\n        timer: 1500\n      });\n    },\n    login() {\n      const userStore = useUserStore();\n      this.errorsTest = false;\n      this.emailErroe = false;\n      this.passwordErroe = false;\n      axios.post('http://127.0.0.1:8000/api/login', {\n        email: this.email,\n        password: this.password\n      }).then(response => {\n        localStorage.setItem('token', response.data.token);\n        userStore.setUserData(response.data.user);\n        this.$router.push('/user/');\n      }).catch(error => {\n        if (error.response.status === 422) {\n          this.emailErroe = true;\n          this.passwordErroe = true;\n          this.errorsRequire = \"Email and password are required\";\n          this.errorsTest = true;\n        }\n        if (error.response.status === 401) {\n          if (error.response.data.error === 'email') {\n            this.emailErroe = true;\n            this.errorsRequire = \"Email is invalid or not exist\";\n            this.errorsTest = true;\n          } else this.emailErroe = false;\n          if (error.response.data.error === 'password') {\n            this.passwordErroe = true;\n            this.errorsRequire = \"Password is invalid\";\n            this.errorsTest = true;\n          } else this.passwordErroe = false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["useUserStore","axios","Swal","data","email","password","emailErroe","passwordErroe","errorsRequire","errorsTest","methods","togleInputPassword","input","document","getElementById","svg","querySelector","type","style","fill","showAlert","message","icone","fire","position","icon","title","showConfirmButton","timer","login","userStore","post","then","response","localStorage","setItem","token","setUserData","user","$router","push","catch","error","status"],"sources":["C:\\Users\\Youcode\\Desktop\\FLLLROUGE\\fille-rouge-vue\\src\\components\\Auth\\AppAuthLogin.vue"],"sourcesContent":["<template>\r\n    <div class=\"d-flex justify-content-center align-items-center\">\r\n        <main>\r\n            <div class=\"logo text-center\">\r\n                <img src=\"../../assets/img/logo3.png\" alt=\"logo\" width=\"300px\">\r\n            </div>\r\n            <div class=\"cardForm shadow p-5 m-3 \">\r\n                <div class=\"alert alert-danger\" v-if=\"errorsTest\" >{{ errorsRequire }}</div>\r\n                <h3 class=\"blueColor text-center\">Login to Your Account</h3>\r\n                <p class=\"text-center text-secondary\">Enter your email & password to login</p>\r\n                <form action=\"\" class=\"d-flex flex-column justify-content-between gap-4\">\r\n                    <label class=\"text-secondary\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <input v-model=\"email\" type=\"email\" :class=\"{ 'is-invalid': emailErroe }\" class=\"form-control\" name=\"email\" placeholder=\"Email ..\">\r\n                            <div class=\"input-group-append cursor-point\">\r\n                                <span class=\"input-group-text\"> \r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-envelope\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1zm13 2.383-4.708 2.825L15 11.105zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741M1 11.105l4.708-2.897L1 5.383z\"/>\r\n                                    </svg>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                    <label class=\"text-secondary\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <input v-model=\"password\" type=\"password\" :class=\"{ 'is-invalid': passwordErroe }\" class=\"form-control\" id=\"password\" placeholder=\"Password\">\r\n                            <div class=\"input-group-append cursor-point\">\r\n                                <span class=\"input-group-text\" @click=\"togleInputPassword()\"> \r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-eye\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8M1.173 8a13 13 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5s3.879 1.168 5.168 2.457A13 13 0 0 1 14.828 8q-.086.13-.195.288c-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5s-3.879-1.168-5.168-2.457A13 13 0 0 1 1.172 8z\"/>\r\n                                    <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5M4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0\"/>\r\n                                    </svg>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                    <label class=\"text-secondary\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\"> Remember me\r\n                    </label>\r\n                    <button @click=\"login()\" type=\"button\" class=\"btn btn-primary\">Login</button>\r\n                    <p class=\"text-secondary\">Don't have account? <router-link to=\"/user/auth/register\"  class=\"blueColor no-underline\"> Create an account</router-link></p>\r\n                </form>\r\n            </div>\r\n            <footer>\r\n                <p class=\"fw-bold text-secondary text-center p-2\">Â© Copyright AskMe. All Rights Reserved <br>\r\n                Designed by Rabie Ait Imghi</p>\r\n            </footer>\r\n        </main>\r\n    </div>\r\n</template>\r\n<style>\r\n    .is-invalid{\r\n        border: 1px solid red;\r\n    }\r\n</style>\r\n<script>\r\nimport { useUserStore } from '../../store'\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\n    export default{\r\n        data() {\r\n            return {\r\n                email: '',\r\n                password: '',\r\n                emailErroe: false,\r\n                passwordErroe: false,\r\n                errorsRequire: \"\",\r\n                errorsTest:false,\r\n            }\r\n        },\r\n        methods: {\r\n            togleInputPassword(){\r\n                let input = document.getElementById('password');\r\n                let svg = document.querySelector('svg');\r\n                if(input.type === 'password'){\r\n                    input.type = 'text';\r\n                    svg.style.fill = 'blue';\r\n                }else{\r\n                    input.type = 'password';\r\n                    svg.style.fill = 'currentColor';\r\n                }\r\n            },\r\n            showAlert(message,icone) {\r\n                Swal.fire({\r\n                position: 'bottom-end',\r\n                icon: icone,\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n                });\r\n            },\r\n            login() {\r\n                const userStore = useUserStore();\r\n                this.errorsTest = false;\r\n                this.emailErroe= false;\r\n                this.passwordErroe= false;\r\n                axios.post('http://127.0.0.1:8000/api/login', {\r\n                    email: this.email,\r\n                    password: this.password\r\n                })\r\n                .then(response => {\r\n                    localStorage.setItem('token', response.data.token);\r\n                    userStore.setUserData(response.data.user);\r\n                    this.$router.push('/user/');\r\n                })\r\n                .catch(error => {\r\n                    if(error.response.status === 422){\r\n                        this.emailErroe = true;\r\n                        this.passwordErroe = true;\r\n                        this.errorsRequire = \"Email and password are required\";\r\n                        this.errorsTest = true;\r\n                    }\r\n                    if (error.response.status === 401) {\r\n                        if(error.response.data.error === 'email'){\r\n                            this.emailErroe = true;\r\n                            this.errorsRequire = \"Email is invalid or not exist\";\r\n                            this.errorsTest = true;\r\n                        }else this.emailErroe = false;\r\n                        if(error.response.data.error === 'password'){\r\n                            this.passwordErroe = true;\r\n                            this.errorsRequire = \"Password is invalid\";\r\n                            this.errorsTest = true;\r\n                        }\r\n                        else this.passwordErroe = false;\r\n                    }\r\n                });\r\n            },\r\n        }\r\n    }\r\n</script>"],"mappings":";AAwDA,SAASA,YAAW,QAAS,aAAY;AACzC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,aAAY;AACzB,eAAc;EACVC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,KAAK;MACjBC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAC;IACf;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,kBAAkBA,CAAA,EAAE;MAChB,IAAIC,KAAI,GAAIC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;MAC/C,IAAIC,GAAE,GAAIF,QAAQ,CAACG,aAAa,CAAC,KAAK,CAAC;MACvC,IAAGJ,KAAK,CAACK,IAAG,KAAM,UAAU,EAAC;QACzBL,KAAK,CAACK,IAAG,GAAI,MAAM;QACnBF,GAAG,CAACG,KAAK,CAACC,IAAG,GAAI,MAAM;MAC3B,CAAC,MAAI;QACDP,KAAK,CAACK,IAAG,GAAI,UAAU;QACvBF,GAAG,CAACG,KAAK,CAACC,IAAG,GAAI,cAAc;MACnC;IACJ,CAAC;IACDC,SAASA,CAACC,OAAO,EAACC,KAAK,EAAE;MACrBpB,IAAI,CAACqB,IAAI,CAAC;QACVC,QAAQ,EAAE,YAAY;QACtBC,IAAI,EAAEH,KAAK;QACXI,KAAK,EAAEL,OAAO;QACdM,iBAAiB,EAAE,KAAK;QACxBC,KAAK,EAAE;MACP,CAAC,CAAC;IACN,CAAC;IACDC,KAAKA,CAAA,EAAG;MACJ,MAAMC,SAAQ,GAAI9B,YAAY,CAAC,CAAC;MAChC,IAAI,CAACS,UAAS,GAAI,KAAK;MACvB,IAAI,CAACH,UAAU,GAAE,KAAK;MACtB,IAAI,CAACC,aAAa,GAAE,KAAK;MACzBN,KAAK,CAAC8B,IAAI,CAAC,iCAAiC,EAAE;QAC1C3B,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACnB,CAAC,EACA2B,IAAI,CAACC,QAAO,IAAK;QACdC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC9B,IAAI,CAACiC,KAAK,CAAC;QAClDN,SAAS,CAACO,WAAW,CAACJ,QAAQ,CAAC9B,IAAI,CAACmC,IAAI,CAAC;QACzC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC/B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZ,IAAGA,KAAK,CAACT,QAAQ,CAACU,MAAK,KAAM,GAAG,EAAC;UAC7B,IAAI,CAACrC,UAAS,GAAI,IAAI;UACtB,IAAI,CAACC,aAAY,GAAI,IAAI;UACzB,IAAI,CAACC,aAAY,GAAI,iCAAiC;UACtD,IAAI,CAACC,UAAS,GAAI,IAAI;QAC1B;QACA,IAAIiC,KAAK,CAACT,QAAQ,CAACU,MAAK,KAAM,GAAG,EAAE;UAC/B,IAAGD,KAAK,CAACT,QAAQ,CAAC9B,IAAI,CAACuC,KAAI,KAAM,OAAO,EAAC;YACrC,IAAI,CAACpC,UAAS,GAAI,IAAI;YACtB,IAAI,CAACE,aAAY,GAAI,+BAA+B;YACpD,IAAI,CAACC,UAAS,GAAI,IAAI;UAC1B,CAAC,MAAK,IAAI,CAACH,UAAS,GAAI,KAAK;UAC7B,IAAGoC,KAAK,CAACT,QAAQ,CAAC9B,IAAI,CAACuC,KAAI,KAAM,UAAU,EAAC;YACxC,IAAI,CAACnC,aAAY,GAAI,IAAI;YACzB,IAAI,CAACC,aAAY,GAAI,qBAAqB;YAC1C,IAAI,CAACC,UAAS,GAAI,IAAI;UAC1B,OACK,IAAI,CAACF,aAAY,GAAI,KAAK;QACnC;MACJ,CAAC,CAAC;IACN;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}