{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/**\n* Tom Select v2.3.1\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n})(this, function () {\n  'use strict';\n\n  /**\n   * MicroEvent - to make any js object an event emitter\n   *\n   * - pure javascript - server compatible, browser compatible\n   * - dont rely on the browser doms\n   * - super simple - you get it immediatly, no mistery, no magic involved\n   *\n   * @author Jerome Etienne (https://github.com/jeromeetienne)\n   */\n\n  /**\n   * Execute callback for each event in space separated list of event names\n   *\n   */\n  function forEvents(events, callback) {\n    events.split(/\\s+/).forEach(event => {\n      callback(event);\n    });\n  }\n  class MicroEvent {\n    constructor() {\n      this._events = void 0;\n      this._events = {};\n    }\n    on(events, fct) {\n      forEvents(events, event => {\n        const event_array = this._events[event] || [];\n        event_array.push(fct);\n        this._events[event] = event_array;\n      });\n    }\n    off(events, fct) {\n      var n = arguments.length;\n      if (n === 0) {\n        this._events = {};\n        return;\n      }\n      forEvents(events, event => {\n        if (n === 1) {\n          delete this._events[event];\n          return;\n        }\n        const event_array = this._events[event];\n        if (event_array === undefined) return;\n        event_array.splice(event_array.indexOf(fct), 1);\n        this._events[event] = event_array;\n      });\n    }\n    trigger(events, ...args) {\n      var self = this;\n      forEvents(events, event => {\n        const event_array = self._events[event];\n        if (event_array === undefined) return;\n        event_array.forEach(fct => {\n          fct.apply(self, args);\n        });\n      });\n    }\n  }\n\n  /**\n   * microplugin.js\n   * Copyright (c) 2013 Brian Reavis & contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   * @author Brian Reavis <brian@thirdroute.com>\n   */\n\n  function MicroPlugin(Interface) {\n    Interface.plugins = {};\n    return class extends Interface {\n      constructor(...args) {\n        super(...args);\n        this.plugins = {\n          names: [],\n          settings: {},\n          requested: {},\n          loaded: {}\n        };\n      }\n      /**\n       * Registers a plugin.\n       *\n       * @param {function} fn\n       */\n      static define(name, fn) {\n        Interface.plugins[name] = {\n          'name': name,\n          'fn': fn\n        };\n      }\n\n      /**\n       * Initializes the listed plugins (with options).\n       * Acceptable formats:\n       *\n       * List (without options):\n       *   ['a', 'b', 'c']\n       *\n       * List (with options):\n       *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n       *\n       * Hash (with options):\n       *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n       *\n       * @param {array|object} plugins\n       */\n      initializePlugins(plugins) {\n        var key, name;\n        const self = this;\n        const queue = [];\n        if (Array.isArray(plugins)) {\n          plugins.forEach(plugin => {\n            if (typeof plugin === 'string') {\n              queue.push(plugin);\n            } else {\n              self.plugins.settings[plugin.name] = plugin.options;\n              queue.push(plugin.name);\n            }\n          });\n        } else if (plugins) {\n          for (key in plugins) {\n            if (plugins.hasOwnProperty(key)) {\n              self.plugins.settings[key] = plugins[key];\n              queue.push(key);\n            }\n          }\n        }\n        while (name = queue.shift()) {\n          self.require(name);\n        }\n      }\n      loadPlugin(name) {\n        var self = this;\n        var plugins = self.plugins;\n        var plugin = Interface.plugins[name];\n        if (!Interface.plugins.hasOwnProperty(name)) {\n          throw new Error('Unable to find \"' + name + '\" plugin');\n        }\n        plugins.requested[name] = true;\n        plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n        plugins.names.push(name);\n      }\n\n      /**\n       * Initializes a plugin.\n       *\n       */\n      require(name) {\n        var self = this;\n        var plugins = self.plugins;\n        if (!self.plugins.loaded.hasOwnProperty(name)) {\n          if (plugins.requested[name]) {\n            throw new Error('Plugin has circular dependency (\"' + name + '\")');\n          }\n          self.loadPlugin(name);\n        }\n        return plugins.loaded[name];\n      }\n    };\n  }\n\n  /*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n  /**\n   * Convert array of strings to a regular expression\n   *\tex ['ab','a'] => (?:ab|a)\n   * \tex ['a','b'] => [ab]\n   * @param {string[]} chars\n   * @return {string}\n   */\n  const arrayToPattern = chars => {\n    chars = chars.filter(Boolean);\n    if (chars.length < 2) {\n      return chars[0] || '';\n    }\n    return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n  };\n  /**\n   * @param {string[]} array\n   * @return {string}\n   */\n\n  const sequencePattern = array => {\n    if (!hasDuplicates(array)) {\n      return array.join('');\n    }\n    let pattern = '';\n    let prev_char_count = 0;\n    const prev_pattern = () => {\n      if (prev_char_count > 1) {\n        pattern += '{' + prev_char_count + '}';\n      }\n    };\n    array.forEach((char, i) => {\n      if (char === array[i - 1]) {\n        prev_char_count++;\n        return;\n      }\n      prev_pattern();\n      pattern += char;\n      prev_char_count = 1;\n    });\n    prev_pattern();\n    return pattern;\n  };\n  /**\n   * Convert array of strings to a regular expression\n   *\tex ['ab','a'] => (?:ab|a)\n   * \tex ['a','b'] => [ab]\n   * @param {Set<string>} chars\n   * @return {string}\n   */\n\n  const setToPattern = chars => {\n    let array = toArray(chars);\n    return arrayToPattern(array);\n  };\n  /**\n   *\n   * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n   * @param {any[]} array\n   */\n\n  const hasDuplicates = array => {\n    return new Set(array).size !== array.length;\n  };\n  /**\n   * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n   * @param {string} str\n   * @return {string}\n   */\n\n  const escape_regex = str => {\n    return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n  };\n  /**\n   * Return the max length of array values\n   * @param {string[]} array\n   *\n   */\n\n  const maxValueLength = array => {\n    return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n  };\n  /**\n   * @param {string} str\n   */\n\n  const unicodeLength = str => {\n    return toArray(str).length;\n  };\n  /**\n   * @param {any} p\n   * @return {any[]}\n   */\n\n  const toArray = p => Array.from(p);\n\n  /*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n  /**\n   * Get all possible combinations of substrings that add up to the given string\n   * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n   * @param {string} input\n   * @return {string[][]}\n   */\n  const allSubstrings = input => {\n    if (input.length === 1) return [[input]];\n    /** @type {string[][]} */\n\n    let result = [];\n    const start = input.substring(1);\n    const suba = allSubstrings(start);\n    suba.forEach(function (subresult) {\n      let tmp = subresult.slice(0);\n      tmp[0] = input.charAt(0) + tmp[0];\n      result.push(tmp);\n      tmp = subresult.slice(0);\n      tmp.unshift(input.charAt(0));\n      result.push(tmp);\n    });\n    return result;\n  };\n\n  /*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\n  /**\n   * @typedef {{[key:string]:string}} TUnicodeMap\n   * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n   * @typedef {[[number,number]]} TCodePoints\n   * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n   * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n   */\n  /** @type {TCodePoints} */\n\n  const code_points = [[0, 65535]];\n  const accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n  /** @type {TUnicodeMap} */\n\n  let unicode_map;\n  /** @type {RegExp} */\n\n  let multi_char_reg;\n  const max_char_length = 3;\n  /** @type {TUnicodeMap} */\n\n  const latin_convert = {};\n  /** @type {TUnicodeMap} */\n\n  const latin_condensed = {\n    '/': '⁄∕',\n    '0': '߀',\n    \"a\": \"ⱥɐɑ\",\n    \"aa\": \"ꜳ\",\n    \"ae\": \"æǽǣ\",\n    \"ao\": \"ꜵ\",\n    \"au\": \"ꜷ\",\n    \"av\": \"ꜹꜻ\",\n    \"ay\": \"ꜽ\",\n    \"b\": \"ƀɓƃ\",\n    \"c\": \"ꜿƈȼↄ\",\n    \"d\": \"đɗɖᴅƌꮷԁɦ\",\n    \"e\": \"ɛǝᴇɇ\",\n    \"f\": \"ꝼƒ\",\n    \"g\": \"ǥɠꞡᵹꝿɢ\",\n    \"h\": \"ħⱨⱶɥ\",\n    \"i\": \"ɨı\",\n    \"j\": \"ɉȷ\",\n    \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n    \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n    \"m\": \"ɱɯϻ\",\n    \"n\": \"ꞥƞɲꞑᴎлԉ\",\n    \"o\": \"øǿɔɵꝋꝍᴑ\",\n    \"oe\": \"œ\",\n    \"oi\": \"ƣ\",\n    \"oo\": \"ꝏ\",\n    \"ou\": \"ȣ\",\n    \"p\": \"ƥᵽꝑꝓꝕρ\",\n    \"q\": \"ꝗꝙɋ\",\n    \"r\": \"ɍɽꝛꞧꞃ\",\n    \"s\": \"ßȿꞩꞅʂ\",\n    \"t\": \"ŧƭʈⱦꞇ\",\n    \"th\": \"þ\",\n    \"tz\": \"ꜩ\",\n    \"u\": \"ʉ\",\n    \"v\": \"ʋꝟʌ\",\n    \"vy\": \"ꝡ\",\n    \"w\": \"ⱳ\",\n    \"y\": \"ƴɏỿ\",\n    \"z\": \"ƶȥɀⱬꝣ\",\n    \"hv\": \"ƕ\"\n  };\n  for (let latin in latin_condensed) {\n    let unicode = latin_condensed[latin] || '';\n    for (let i = 0; i < unicode.length; i++) {\n      let char = unicode.substring(i, i + 1);\n      latin_convert[char] = latin;\n    }\n  }\n  const convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n  /**\n   * Initialize the unicode_map from the give code point ranges\n   *\n   * @param {TCodePoints=} _code_points\n   */\n\n  const initialize = _code_points => {\n    if (unicode_map !== undefined) return;\n    unicode_map = generateMap(_code_points || code_points);\n  };\n  /**\n   * Helper method for normalize a string\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n   * @param {string} str\n   * @param {string} form\n   */\n\n  const normalize = (str, form = 'NFKD') => str.normalize(form);\n  /**\n   * Remove accents without reordering string\n   * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n   * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n   * @param {string} str\n   * @return {string}\n   */\n\n  const asciifold = str => {\n    return toArray(str).reduce(\n    /**\n     * @param {string} result\n     * @param {string} char\n     */\n    (result, char) => {\n      return result + _asciifold(char);\n    }, '');\n  };\n  /**\n   * @param {string} str\n   * @return {string}\n   */\n\n  const _asciifold = str => {\n    str = normalize(str).toLowerCase().replace(convert_pat, ( /** @type {string} */\n    char) => {\n      return latin_convert[char] || '';\n    }); //return str;\n\n    return normalize(str, 'NFC');\n  };\n  /**\n   * Generate a list of unicode variants from the list of code points\n   * @param {TCodePoints} code_points\n   * @yield {TCodePointObj}\n   */\n\n  function* generator(code_points) {\n    for (const [code_point_min, code_point_max] of code_points) {\n      for (let i = code_point_min; i <= code_point_max; i++) {\n        let composed = String.fromCharCode(i);\n        let folded = asciifold(composed);\n        if (folded == composed.toLowerCase()) {\n          continue;\n        } // skip when folded is a string longer than 3 characters long\n        // bc the resulting regex patterns will be long\n        // eg:\n        // folded صلى الله عليه وسلم length 18 code point 65018\n        // folded جل جلاله length 8 code point 65019\n\n        if (folded.length > max_char_length) {\n          continue;\n        }\n        if (folded.length == 0) {\n          continue;\n        }\n        yield {\n          folded: folded,\n          composed: composed,\n          code_point: i\n        };\n      }\n    }\n  }\n  /**\n   * Generate a unicode map from the list of code points\n   * @param {TCodePoints} code_points\n   * @return {TUnicodeSets}\n   */\n\n  const generateSets = code_points => {\n    /** @type {{[key:string]:Set<string>}} */\n    const unicode_sets = {};\n    /**\n     * @param {string} folded\n     * @param {string} to_add\n     */\n\n    const addMatching = (folded, to_add) => {\n      /** @type {Set<string>} */\n      const folded_set = unicode_sets[folded] || new Set();\n      const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n      if (to_add.match(patt)) {\n        return;\n      }\n      folded_set.add(escape_regex(to_add));\n      unicode_sets[folded] = folded_set;\n    };\n    for (let value of generator(code_points)) {\n      addMatching(value.folded, value.folded);\n      addMatching(value.folded, value.composed);\n    }\n    return unicode_sets;\n  };\n  /**\n   * Generate a unicode map from the list of code points\n   * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n   *\n   * @param {TCodePoints} code_points\n   * @return {TUnicodeMap}\n   */\n\n  const generateMap = code_points => {\n    /** @type {TUnicodeSets} */\n    const unicode_sets = generateSets(code_points);\n    /** @type {TUnicodeMap} */\n\n    const unicode_map = {};\n    /** @type {string[]} */\n\n    let multi_char = [];\n    for (let folded in unicode_sets) {\n      let set = unicode_sets[folded];\n      if (set) {\n        unicode_map[folded] = setToPattern(set);\n      }\n      if (folded.length > 1) {\n        multi_char.push(escape_regex(folded));\n      }\n    }\n    multi_char.sort((a, b) => b.length - a.length);\n    const multi_char_patt = arrayToPattern(multi_char);\n    multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n    return unicode_map;\n  };\n  /**\n   * Map each element of an array from it's folded value to all possible unicode matches\n   * @param {string[]} strings\n   * @param {number} min_replacement\n   * @return {string}\n   */\n\n  const mapSequence = (strings, min_replacement = 1) => {\n    let chars_replaced = 0;\n    strings = strings.map(str => {\n      if (unicode_map[str]) {\n        chars_replaced += str.length;\n      }\n      return unicode_map[str] || str;\n    });\n    if (chars_replaced >= min_replacement) {\n      return sequencePattern(strings);\n    }\n    return '';\n  };\n  /**\n   * Convert a short string and split it into all possible patterns\n   * Keep a pattern only if min_replacement is met\n   *\n   * 'abc'\n   * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n   *\t\t=> ['abc-pattern','ab-c-pattern'...]\n   *\n   *\n   * @param {string} str\n   * @param {number} min_replacement\n   * @return {string}\n   */\n\n  const substringsToPattern = (str, min_replacement = 1) => {\n    min_replacement = Math.max(min_replacement, str.length - 1);\n    return arrayToPattern(allSubstrings(str).map(sub_pat => {\n      return mapSequence(sub_pat, min_replacement);\n    }));\n  };\n  /**\n   * Convert an array of sequences into a pattern\n   * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n   *\n   * @param {Sequence[]} sequences\n   * @param {boolean} all\n   */\n\n  const sequencesToPattern = (sequences, all = true) => {\n    let min_replacement = sequences.length > 1 ? 1 : 0;\n    return arrayToPattern(sequences.map(sequence => {\n      let seq = [];\n      const len = all ? sequence.length() : sequence.length() - 1;\n      for (let j = 0; j < len; j++) {\n        seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n      }\n      return sequencePattern(seq);\n    }));\n  };\n  /**\n   * Return true if the sequence is already in the sequences\n   * @param {Sequence} needle_seq\n   * @param {Sequence[]} sequences\n   */\n\n  const inSequences = (needle_seq, sequences) => {\n    for (const seq of sequences) {\n      if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n        continue;\n      }\n      if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n        continue;\n      }\n      let needle_parts = needle_seq.parts;\n      /**\n       * @param {TSequencePart} part\n       */\n\n      const filter = part => {\n        for (const needle_part of needle_parts) {\n          if (needle_part.start === part.start && needle_part.substr === part.substr) {\n            return false;\n          }\n          if (part.length == 1 || needle_part.length == 1) {\n            continue;\n          } // check for overlapping parts\n          // a = ['::=','==']\n          // b = ['::','===']\n          // a = ['r','sm']\n          // b = ['rs','m']\n\n          if (part.start < needle_part.start && part.end > needle_part.start) {\n            return true;\n          }\n          if (needle_part.start < part.start && needle_part.end > part.start) {\n            return true;\n          }\n        }\n        return false;\n      };\n      let filtered = seq.parts.filter(filter);\n      if (filtered.length > 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  };\n  class Sequence {\n    constructor() {\n      /** @type {TSequencePart[]} */\n      this.parts = [];\n      /** @type {string[]} */\n\n      this.substrs = [];\n      this.start = 0;\n      this.end = 0;\n    }\n    /**\n     * @param {TSequencePart|undefined} part\n     */\n\n    add(part) {\n      if (part) {\n        this.parts.push(part);\n        this.substrs.push(part.substr);\n        this.start = Math.min(part.start, this.start);\n        this.end = Math.max(part.end, this.end);\n      }\n    }\n    last() {\n      return this.parts[this.parts.length - 1];\n    }\n    length() {\n      return this.parts.length;\n    }\n    /**\n     * @param {number} position\n     * @param {TSequencePart} last_piece\n     */\n\n    clone(position, last_piece) {\n      let clone = new Sequence();\n      let parts = JSON.parse(JSON.stringify(this.parts));\n      let last_part = parts.pop();\n      for (const part of parts) {\n        clone.add(part);\n      }\n      let last_substr = last_piece.substr.substring(0, position - last_part.start);\n      let clone_last_len = last_substr.length;\n      clone.add({\n        start: last_part.start,\n        end: last_part.start + clone_last_len,\n        length: clone_last_len,\n        substr: last_substr\n      });\n      return clone;\n    }\n  }\n  /**\n   * Expand a regular expression pattern to include unicode variants\n   * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n   *\n   * Issue:\n   *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n   *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n   *\n   *\tİĲ = IIJ = ⅡJ\n   *\n   * \t1/2/4\n   *\n   * @param {string} str\n   * @return {string|undefined}\n   */\n\n  const getPattern = str => {\n    initialize();\n    str = asciifold(str);\n    let pattern = '';\n    let sequences = [new Sequence()];\n    for (let i = 0; i < str.length; i++) {\n      let substr = str.substring(i);\n      let match = substr.match(multi_char_reg);\n      const char = str.substring(i, i + 1);\n      const match_str = match ? match[0] : null; // loop through sequences\n      // add either the char or multi_match\n\n      let overlapping = [];\n      let added_types = new Set();\n      for (const sequence of sequences) {\n        const last_piece = sequence.last();\n        if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n          // if we have a multi match\n          if (match_str) {\n            const len = match_str.length;\n            sequence.add({\n              start: i,\n              end: i + len,\n              length: len,\n              substr: match_str\n            });\n            added_types.add('1');\n          } else {\n            sequence.add({\n              start: i,\n              end: i + 1,\n              length: 1,\n              substr: char\n            });\n            added_types.add('2');\n          }\n        } else if (match_str) {\n          let clone = sequence.clone(i, last_piece);\n          const len = match_str.length;\n          clone.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          overlapping.push(clone);\n        } else {\n          // don't add char\n          // adding would create invalid patterns: 234 => [2,34,4]\n          added_types.add('3');\n        }\n      } // if we have overlapping\n\n      if (overlapping.length > 0) {\n        // ['ii','iii'] before ['i','i','iii']\n        overlapping = overlapping.sort((a, b) => {\n          return a.length() - b.length();\n        });\n        for (let clone of overlapping) {\n          // don't add if we already have an equivalent sequence\n          if (inSequences(clone, sequences)) {\n            continue;\n          }\n          sequences.push(clone);\n        }\n        continue;\n      } // if we haven't done anything unique\n      // clean up the patterns\n      // helps keep patterns smaller\n      // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n      if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n        pattern += sequencesToPattern(sequences, false);\n        let new_seq = new Sequence();\n        const old_seq = sequences[0];\n        if (old_seq) {\n          new_seq.add(old_seq.last());\n        }\n        sequences = [new_seq];\n      }\n    }\n    pattern += sequencesToPattern(sequences, true);\n    return pattern;\n  };\n\n  /*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n  /**\n   * A property getter resolving dot-notation\n   * @param  {Object}  obj     The root object to fetch property on\n   * @param  {String}  name    The optionally dotted property name to fetch\n   * @return {Object}          The resolved property value\n   */\n  const getAttr = (obj, name) => {\n    if (!obj) return;\n    return obj[name];\n  };\n  /**\n   * A property getter resolving dot-notation\n   * @param  {Object}  obj     The root object to fetch property on\n   * @param  {String}  name    The optionally dotted property name to fetch\n   * @return {Object}          The resolved property value\n   */\n\n  const getAttrNesting = (obj, name) => {\n    if (!obj) return;\n    var part,\n      names = name.split(\".\");\n    while ((part = names.shift()) && (obj = obj[part]));\n    return obj;\n  };\n  /**\n   * Calculates how close of a match the\n   * given value is against a search token.\n   *\n   */\n\n  const scoreValue = (value, token, weight) => {\n    var score, pos;\n    if (!value) return 0;\n    value = value + '';\n    if (token.regex == null) return 0;\n    pos = value.search(token.regex);\n    if (pos === -1) return 0;\n    score = token.string.length / value.length;\n    if (pos === 0) score += 0.5;\n    return score * weight;\n  };\n  /**\n   * Cast object property to an array if it exists and has a value\n   *\n   */\n\n  const propToArray = (obj, key) => {\n    var value = obj[key];\n    if (typeof value == 'function') return value;\n    if (value && !Array.isArray(value)) {\n      obj[key] = [value];\n    }\n  };\n  /**\n   * Iterates over arrays and hashes.\n   *\n   * ```\n   * iterate(this.items, function(item, id) {\n   *    // invoked for each item\n   * });\n   * ```\n   *\n   */\n\n  const iterate$1 = (object, callback) => {\n    if (Array.isArray(object)) {\n      object.forEach(callback);\n    } else {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          callback(object[key], key);\n        }\n      }\n    }\n  };\n  const cmp = (a, b) => {\n    if (typeof a === 'number' && typeof b === 'number') {\n      return a > b ? 1 : a < b ? -1 : 0;\n    }\n    a = asciifold(a + '').toLowerCase();\n    b = asciifold(b + '').toLowerCase();\n    if (a > b) return 1;\n    if (b > a) return -1;\n    return 0;\n  };\n\n  /*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n  /**\n   * sifter.js\n   * Copyright (c) 2013–2020 Brian Reavis & contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   * @author Brian Reavis <brian@thirdroute.com>\n   */\n\n  class Sifter {\n    // []|{};\n\n    /**\n     * Textually searches arrays and hashes of objects\n     * by property (or multiple properties). Designed\n     * specifically for autocomplete.\n     *\n     */\n    constructor(items, settings) {\n      this.items = void 0;\n      this.settings = void 0;\n      this.items = items;\n      this.settings = settings || {\n        diacritics: true\n      };\n    }\n\n    /**\n     * Splits a search string into an array of individual\n     * regexps to be used to match results.\n     *\n     */\n    tokenize(query, respect_word_boundaries, weights) {\n      if (!query || !query.length) return [];\n      const tokens = [];\n      const words = query.split(/\\s+/);\n      var field_regex;\n      if (weights) {\n        field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n      }\n      words.forEach(word => {\n        let field_match;\n        let field = null;\n        let regex = null; // look for \"field:query\" tokens\n\n        if (field_regex && (field_match = word.match(field_regex))) {\n          field = field_match[1];\n          word = field_match[2];\n        }\n        if (word.length > 0) {\n          if (this.settings.diacritics) {\n            regex = getPattern(word) || null;\n          } else {\n            regex = escape_regex(word);\n          }\n          if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n        }\n        tokens.push({\n          string: word,\n          regex: regex ? new RegExp(regex, 'iu') : null,\n          field: field\n        });\n      });\n      return tokens;\n    }\n\n    /**\n     * Returns a function to be used to score individual results.\n     *\n     * Good matches will have a higher score than poor matches.\n     * If an item is not a match, 0 will be returned by the function.\n     *\n     * @returns {T.ScoreFn}\n     */\n    getScoreFunction(query, options) {\n      var search = this.prepareSearch(query, options);\n      return this._getScoreFunction(search);\n    }\n    /**\n     * @returns {T.ScoreFn}\n     *\n     */\n\n    _getScoreFunction(search) {\n      const tokens = search.tokens,\n        token_count = tokens.length;\n      if (!token_count) {\n        return function () {\n          return 0;\n        };\n      }\n      const fields = search.options.fields,\n        weights = search.weights,\n        field_count = fields.length,\n        getAttrFn = search.getAttrFn;\n      if (!field_count) {\n        return function () {\n          return 1;\n        };\n      }\n      /**\n       * Calculates the score of an object\n       * against the search query.\n       *\n       */\n\n      const scoreObject = function () {\n        if (field_count === 1) {\n          return function (token, data) {\n            const field = fields[0].field;\n            return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n          };\n        }\n        return function (token, data) {\n          var sum = 0; // is the token specific to a field?\n\n          if (token.field) {\n            const value = getAttrFn(data, token.field);\n            if (!token.regex && value) {\n              sum += 1 / field_count;\n            } else {\n              sum += scoreValue(value, token, 1);\n            }\n          } else {\n            iterate$1(weights, (weight, field) => {\n              sum += scoreValue(getAttrFn(data, field), token, weight);\n            });\n          }\n          return sum / field_count;\n        };\n      }();\n      if (token_count === 1) {\n        return function (data) {\n          return scoreObject(tokens[0], data);\n        };\n      }\n      if (search.options.conjunction === 'and') {\n        return function (data) {\n          var score,\n            sum = 0;\n          for (let token of tokens) {\n            score = scoreObject(token, data);\n            if (score <= 0) return 0;\n            sum += score;\n          }\n          return sum / token_count;\n        };\n      } else {\n        return function (data) {\n          var sum = 0;\n          iterate$1(tokens, token => {\n            sum += scoreObject(token, data);\n          });\n          return sum / token_count;\n        };\n      }\n    }\n\n    /**\n     * Returns a function that can be used to compare two\n     * results, for sorting purposes. If no sorting should\n     * be performed, `null` will be returned.\n     *\n     * @return function(a,b)\n     */\n    getSortFunction(query, options) {\n      var search = this.prepareSearch(query, options);\n      return this._getSortFunction(search);\n    }\n    _getSortFunction(search) {\n      var implicit_score,\n        sort_flds = [];\n      const self = this,\n        options = search.options,\n        sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n      if (typeof sort == 'function') {\n        return sort.bind(this);\n      }\n      /**\n       * Fetches the specified sort field value\n       * from a search result item.\n       *\n       */\n\n      const get_field = function get_field(name, result) {\n        if (name === '$score') return result.score;\n        return search.getAttrFn(self.items[result.id], name);\n      }; // parse options\n\n      if (sort) {\n        for (let s of sort) {\n          if (search.query || s.field !== '$score') {\n            sort_flds.push(s);\n          }\n        }\n      } // the \"$score\" field is implied to be the primary\n      // sort field, unless it's manually specified\n\n      if (search.query) {\n        implicit_score = true;\n        for (let fld of sort_flds) {\n          if (fld.field === '$score') {\n            implicit_score = false;\n            break;\n          }\n        }\n        if (implicit_score) {\n          sort_flds.unshift({\n            field: '$score',\n            direction: 'desc'\n          });\n        } // without a search.query, all items will have the same score\n      } else {\n        sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n      } // build function\n\n      const sort_flds_count = sort_flds.length;\n      if (!sort_flds_count) {\n        return null;\n      }\n      return function (a, b) {\n        var result, field;\n        for (let sort_fld of sort_flds) {\n          field = sort_fld.field;\n          let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n          result = multiplier * cmp(get_field(field, a), get_field(field, b));\n          if (result) return result;\n        }\n        return 0;\n      };\n    }\n\n    /**\n     * Parses a search query and returns an object\n     * with tokens and fields ready to be populated\n     * with results.\n     *\n     */\n    prepareSearch(query, optsUser) {\n      const weights = {};\n      var options = Object.assign({}, optsUser);\n      propToArray(options, 'sort');\n      propToArray(options, 'sort_empty'); // convert fields to new format\n\n      if (options.fields) {\n        propToArray(options, 'fields');\n        const fields = [];\n        options.fields.forEach(field => {\n          if (typeof field == 'string') {\n            field = {\n              field: field,\n              weight: 1\n            };\n          }\n          fields.push(field);\n          weights[field.field] = 'weight' in field ? field.weight : 1;\n        });\n        options.fields = fields;\n      }\n      return {\n        options: options,\n        query: query.toLowerCase().trim(),\n        tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n        total: 0,\n        items: [],\n        weights: weights,\n        getAttrFn: options.nesting ? getAttrNesting : getAttr\n      };\n    }\n\n    /**\n     * Searches through all items and returns a sorted array of matches.\n     *\n     */\n    search(query, options) {\n      var self = this,\n        score,\n        search;\n      search = this.prepareSearch(query, options);\n      options = search.options;\n      query = search.query; // generate result scoring function\n\n      const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n      if (query.length) {\n        iterate$1(self.items, (item, id) => {\n          score = fn_score(item);\n          if (options.filter === false || score > 0) {\n            search.items.push({\n              'score': score,\n              'id': id\n            });\n          }\n        });\n      } else {\n        iterate$1(self.items, (_, id) => {\n          search.items.push({\n            'score': 1,\n            'id': id\n          });\n        });\n      }\n      const fn_sort = self._getSortFunction(search);\n      if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n      search.total = search.items.length;\n      if (typeof options.limit === 'number') {\n        search.items = search.items.slice(0, options.limit);\n      }\n      return search;\n    }\n  }\n\n  /**\n   * Iterates over arrays and hashes.\n   *\n   * ```\n   * iterate(this.items, function(item, id) {\n   *    // invoked for each item\n   * });\n   * ```\n   *\n   */\n  const iterate = (object, callback) => {\n    if (Array.isArray(object)) {\n      object.forEach(callback);\n    } else {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          callback(object[key], key);\n        }\n      }\n    }\n  };\n\n  /**\n   * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n   * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n   *\n   * param query should be {}\n   */\n  const getDom = query => {\n    if (query.jquery) {\n      return query[0];\n    }\n    if (query instanceof HTMLElement) {\n      return query;\n    }\n    if (isHtmlString(query)) {\n      var tpl = document.createElement('template');\n      tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n      return tpl.content.firstChild;\n    }\n    return document.querySelector(query);\n  };\n  const isHtmlString = arg => {\n    if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n      return true;\n    }\n    return false;\n  };\n  const escapeQuery = query => {\n    return query.replace(/['\"\\\\]/g, '\\\\$&');\n  };\n\n  /**\n   * Dispatch an event\n   *\n   */\n  const triggerEvent = (dom_el, event_name) => {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(event_name, true, false);\n    dom_el.dispatchEvent(event);\n  };\n\n  /**\n   * Apply CSS rules to a dom element\n   *\n   */\n  const applyCSS = (dom_el, css) => {\n    Object.assign(dom_el.style, css);\n  };\n\n  /**\n   * Add css classes\n   *\n   */\n  const addClasses = (elmts, ...classes) => {\n    var norm_classes = classesArray(classes);\n    elmts = castAsArray(elmts);\n    elmts.map(el => {\n      norm_classes.map(cls => {\n        el.classList.add(cls);\n      });\n    });\n  };\n\n  /**\n   * Remove css classes\n   *\n   */\n  const removeClasses = (elmts, ...classes) => {\n    var norm_classes = classesArray(classes);\n    elmts = castAsArray(elmts);\n    elmts.map(el => {\n      norm_classes.map(cls => {\n        el.classList.remove(cls);\n      });\n    });\n  };\n\n  /**\n   * Return arguments\n   *\n   */\n  const classesArray = args => {\n    var classes = [];\n    iterate(args, _classes => {\n      if (typeof _classes === 'string') {\n        _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n      }\n      if (Array.isArray(_classes)) {\n        classes = classes.concat(_classes);\n      }\n    });\n    return classes.filter(Boolean);\n  };\n\n  /**\n   * Create an array from arg if it's not already an array\n   *\n   */\n  const castAsArray = arg => {\n    if (!Array.isArray(arg)) {\n      arg = [arg];\n    }\n    return arg;\n  };\n\n  /**\n   * Get the closest node to the evt.target matching the selector\n   * Stops at wrapper\n   *\n   */\n  const parentMatch = (target, selector, wrapper) => {\n    if (wrapper && !wrapper.contains(target)) {\n      return;\n    }\n    while (target && target.matches) {\n      if (target.matches(selector)) {\n        return target;\n      }\n      target = target.parentNode;\n    }\n  };\n\n  /**\n   * Get the first or last item from an array\n   *\n   * > 0 - right (last)\n   * <= 0 - left (first)\n   *\n   */\n  const getTail = (list, direction = 0) => {\n    if (direction > 0) {\n      return list[list.length - 1];\n    }\n    return list[0];\n  };\n\n  /**\n   * Return true if an object is empty\n   *\n   */\n  const isEmptyObject = obj => {\n    return Object.keys(obj).length === 0;\n  };\n\n  /**\n   * Get the index of an element amongst sibling nodes of the same type\n   *\n   */\n  const nodeIndex = (el, amongst) => {\n    if (!el) return -1;\n    amongst = amongst || el.nodeName;\n    var i = 0;\n    while (el = el.previousElementSibling) {\n      if (el.matches(amongst)) {\n        i++;\n      }\n    }\n    return i;\n  };\n\n  /**\n   * Set attributes of an element\n   *\n   */\n  const setAttr = (el, attrs) => {\n    iterate(attrs, (val, attr) => {\n      if (val == null) {\n        el.removeAttribute(attr);\n      } else {\n        el.setAttribute(attr, '' + val);\n      }\n    });\n  };\n\n  /**\n   * Replace a node\n   */\n  const replaceNode = (existing, replacement) => {\n    if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n  };\n\n  /**\n   * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n   * Highlights arbitrary terms in a node.\n   *\n   * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n   * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n   */\n\n  const highlight = (element, regex) => {\n    if (regex === null) return;\n\n    // convet string to regex\n    if (typeof regex === 'string') {\n      if (!regex.length) return;\n      regex = new RegExp(regex, 'i');\n    }\n\n    // Wrap matching part of text node with highlighting <span>, e.g.\n    // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n    const highlightText = node => {\n      var match = node.data.match(regex);\n      if (match && node.data.length > 0) {\n        var spannode = document.createElement('span');\n        spannode.className = 'highlight';\n        var middlebit = node.splitText(match.index);\n        middlebit.splitText(match[0].length);\n        var middleclone = middlebit.cloneNode(true);\n        spannode.appendChild(middleclone);\n        replaceNode(middlebit, spannode);\n        return 1;\n      }\n      return 0;\n    };\n\n    // Recurse element node, looking for child text nodes to highlight, unless element\n    // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n    const highlightChildren = node => {\n      if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n        Array.from(node.childNodes).forEach(element => {\n          highlightRecursive(element);\n        });\n      }\n    };\n    const highlightRecursive = node => {\n      if (node.nodeType === 3) {\n        return highlightText(node);\n      }\n      highlightChildren(node);\n      return 0;\n    };\n    highlightRecursive(element);\n  };\n\n  /**\n   * removeHighlight fn copied from highlight v5 and\n   * edited to remove with(), pass js strict mode, and use without jquery\n   */\n  const removeHighlight = el => {\n    var elements = el.querySelectorAll(\"span.highlight\");\n    Array.prototype.forEach.call(elements, function (el) {\n      var parent = el.parentNode;\n      parent.replaceChild(el.firstChild, el);\n      parent.normalize();\n    });\n  };\n  const KEY_A = 65;\n  const KEY_RETURN = 13;\n  const KEY_ESC = 27;\n  const KEY_LEFT = 37;\n  const KEY_UP = 38;\n  const KEY_RIGHT = 39;\n  const KEY_DOWN = 40;\n  const KEY_BACKSPACE = 8;\n  const KEY_DELETE = 46;\n  const KEY_TAB = 9;\n  const IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n  const KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n  var defaults = {\n    options: [],\n    optgroups: [],\n    plugins: [],\n    delimiter: ',',\n    splitOn: null,\n    // regexp or string for splitting up values from a paste command\n    persist: true,\n    diacritics: true,\n    create: null,\n    createOnBlur: false,\n    createFilter: null,\n    highlight: true,\n    openOnFocus: true,\n    shouldOpen: null,\n    maxOptions: 50,\n    maxItems: null,\n    hideSelected: null,\n    duplicates: false,\n    addPrecedence: false,\n    selectOnTab: false,\n    preload: null,\n    allowEmptyOption: false,\n    //closeAfterSelect: false,\n    refreshThrottle: 300,\n    loadThrottle: 300,\n    loadingClass: 'loading',\n    dataAttr: null,\n    //'data-data',\n    optgroupField: 'optgroup',\n    valueField: 'value',\n    labelField: 'text',\n    disabledField: 'disabled',\n    optgroupLabelField: 'label',\n    optgroupValueField: 'value',\n    lockOptgroupOrder: false,\n    sortField: '$order',\n    searchField: ['text'],\n    searchConjunction: 'and',\n    mode: null,\n    wrapperClass: 'ts-wrapper',\n    controlClass: 'ts-control',\n    dropdownClass: 'ts-dropdown',\n    dropdownContentClass: 'ts-dropdown-content',\n    itemClass: 'item',\n    optionClass: 'option',\n    dropdownParent: null,\n    controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n    copyClassesToDropdown: false,\n    placeholder: null,\n    hidePlaceholder: null,\n    shouldLoad: function (query) {\n      return query.length > 0;\n    },\n    /*\n    load                 : null, // function(query, callback) { ... }\n    score                : null, // function(search) { ... }\n    onInitialize         : null, // function() { ... }\n    onChange             : null, // function(value) { ... }\n    onItemAdd            : null, // function(value, $item) { ... }\n    onItemRemove         : null, // function(value) { ... }\n    onClear              : null, // function() { ... }\n    onOptionAdd          : null, // function(value, data) { ... }\n    onOptionRemove       : null, // function(value) { ... }\n    onOptionClear        : null, // function() { ... }\n    onOptionGroupAdd     : null, // function(id, data) { ... }\n    onOptionGroupRemove  : null, // function(id) { ... }\n    onOptionGroupClear   : null, // function() { ... }\n    onDropdownOpen       : null, // function(dropdown) { ... }\n    onDropdownClose      : null, // function(dropdown) { ... }\n    onType               : null, // function(str) { ... }\n    onDelete             : null, // function(values) { ... }\n    */\n\n    render: {\n      /*\n      item: null,\n      optgroup: null,\n      optgroup_header: null,\n      option: null,\n      option_create: null\n      */\n    }\n  };\n\n  /**\n   * Converts a scalar to its best string representation\n   * for hash keys and HTML attribute values.\n   *\n   * Transformations:\n   *   'str'     -> 'str'\n   *   null      -> ''\n   *   undefined -> ''\n   *   true      -> '1'\n   *   false     -> '0'\n   *   0         -> '0'\n   *   1         -> '1'\n   *\n   */\n  const hash_key = value => {\n    if (typeof value === 'undefined' || value === null) return null;\n    return get_hash(value);\n  };\n  const get_hash = value => {\n    if (typeof value === 'boolean') return value ? '1' : '0';\n    return value + '';\n  };\n\n  /**\n   * Escapes a string for use within HTML.\n   *\n   */\n  const escape_html = str => {\n    return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n  };\n\n  /**\n   * use setTimeout if timeout > 0 \n   */\n  const timeout = (fn, timeout) => {\n    if (timeout > 0) {\n      return setTimeout(fn, timeout);\n    }\n    fn.call(null);\n    return null;\n  };\n\n  /**\n   * Debounce the user provided load function\n   *\n   */\n  const loadDebounce = (fn, delay) => {\n    var timeout;\n    return function (value, callback) {\n      var self = this;\n      if (timeout) {\n        self.loading = Math.max(self.loading - 1, 0);\n        clearTimeout(timeout);\n      }\n      timeout = setTimeout(function () {\n        timeout = null;\n        self.loadedSearches[value] = true;\n        fn.call(self, value, callback);\n      }, delay);\n    };\n  };\n\n  /**\n   * Debounce all fired events types listed in `types`\n   * while executing the provided `fn`.\n   *\n   */\n  const debounce_events = (self, types, fn) => {\n    var type;\n    var trigger = self.trigger;\n    var event_args = {};\n\n    // override trigger method\n    self.trigger = function () {\n      var type = arguments[0];\n      if (types.indexOf(type) !== -1) {\n        event_args[type] = arguments;\n      } else {\n        return trigger.apply(self, arguments);\n      }\n    };\n\n    // invoke provided function\n    fn.apply(self, []);\n    self.trigger = trigger;\n\n    // trigger queued events\n    for (type of types) {\n      if (type in event_args) {\n        trigger.apply(self, event_args[type]);\n      }\n    }\n  };\n\n  /**\n   * Determines the current selection within a text input control.\n   * Returns an object containing:\n   *   - start\n   *   - length\n   *\n   * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n   * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n   */\n  const getSelection = input => {\n    return {\n      start: input.selectionStart || 0,\n      length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n    };\n  };\n\n  /**\n   * Prevent default\n   *\n   */\n  const preventDefault = (evt, stop = false) => {\n    if (evt) {\n      evt.preventDefault();\n      if (stop) {\n        evt.stopPropagation();\n      }\n    }\n  };\n\n  /**\n   * Add event helper\n   *\n   */\n  const addEvent = (target, type, callback, options) => {\n    target.addEventListener(type, callback, options);\n  };\n\n  /**\n   * Return true if the requested key is down\n   * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n   * The current evt may not always set ( eg calling advanceSelection() )\n   *\n   */\n  const isKeyDown = (key_name, evt) => {\n    if (!evt) {\n      return false;\n    }\n    if (!evt[key_name]) {\n      return false;\n    }\n    var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n    if (count === 1) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Get the id of an element\n   * If the id attribute is not set, set the attribute with the given id\n   *\n   */\n  const getId = (el, id) => {\n    const existing_id = el.getAttribute('id');\n    if (existing_id) {\n      return existing_id;\n    }\n    el.setAttribute('id', id);\n    return id;\n  };\n\n  /**\n   * Returns a string with backslashes added before characters that need to be escaped.\n   */\n  const addSlashes = str => {\n    return str.replace(/[\\\\\"']/g, '\\\\$&');\n  };\n\n  /**\n   *\n   */\n  const append = (parent, node) => {\n    if (node) parent.append(node);\n  };\n  function getSettings(input, settings_user) {\n    var settings = Object.assign({}, defaults, settings_user);\n    var attr_data = settings.dataAttr;\n    var field_label = settings.labelField;\n    var field_value = settings.valueField;\n    var field_disabled = settings.disabledField;\n    var field_optgroup = settings.optgroupField;\n    var field_optgroup_label = settings.optgroupLabelField;\n    var field_optgroup_value = settings.optgroupValueField;\n    var tag_name = input.tagName.toLowerCase();\n    var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n    if (!placeholder && !settings.allowEmptyOption) {\n      let option = input.querySelector('option[value=\"\"]');\n      if (option) {\n        placeholder = option.textContent;\n      }\n    }\n    var settings_element = {\n      placeholder: placeholder,\n      options: [],\n      optgroups: [],\n      items: [],\n      maxItems: null\n    };\n\n    /**\n     * Initialize from a <select> element.\n     *\n     */\n    var init_select = () => {\n      var tagName;\n      var options = settings_element.options;\n      var optionsMap = {};\n      var group_count = 1;\n      let $order = 0;\n      var readData = el => {\n        var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n        var json = attr_data && data[attr_data];\n        if (typeof json === 'string' && json.length) {\n          data = Object.assign(data, JSON.parse(json));\n        }\n        return data;\n      };\n      var addOption = (option, group) => {\n        var value = hash_key(option.value);\n        if (value == null) return;\n        if (!value && !settings.allowEmptyOption) return;\n\n        // if the option already exists, it's probably been\n        // duplicated in another optgroup. in this case, push\n        // the current group to the \"optgroup\" property on the\n        // existing option so that it's rendered in both places.\n        if (optionsMap.hasOwnProperty(value)) {\n          if (group) {\n            var arr = optionsMap[value][field_optgroup];\n            if (!arr) {\n              optionsMap[value][field_optgroup] = group;\n            } else if (!Array.isArray(arr)) {\n              optionsMap[value][field_optgroup] = [arr, group];\n            } else {\n              arr.push(group);\n            }\n          }\n        } else {\n          var option_data = readData(option);\n          option_data[field_label] = option_data[field_label] || option.textContent;\n          option_data[field_value] = option_data[field_value] || value;\n          option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n          option_data[field_optgroup] = option_data[field_optgroup] || group;\n          option_data.$option = option;\n          option_data.$order = option_data.$order || ++$order;\n          optionsMap[value] = option_data;\n          options.push(option_data);\n        }\n        if (option.selected) {\n          settings_element.items.push(value);\n        }\n      };\n      var addGroup = optgroup => {\n        var id, optgroup_data;\n        optgroup_data = readData(optgroup);\n        optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n        optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n        optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n        optgroup_data.$order = optgroup_data.$order || ++$order;\n        settings_element.optgroups.push(optgroup_data);\n        id = optgroup_data[field_optgroup_value];\n        iterate(optgroup.children, option => {\n          addOption(option, id);\n        });\n      };\n      settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n      iterate(input.children, child => {\n        tagName = child.tagName.toLowerCase();\n        if (tagName === 'optgroup') {\n          addGroup(child);\n        } else if (tagName === 'option') {\n          addOption(child);\n        }\n      });\n    };\n\n    /**\n     * Initialize from a <input type=\"text\"> element.\n     *\n     */\n    var init_textbox = () => {\n      const data_raw = input.getAttribute(attr_data);\n      if (!data_raw) {\n        var value = input.value.trim() || '';\n        if (!settings.allowEmptyOption && !value.length) return;\n        const values = value.split(settings.delimiter);\n        iterate(values, value => {\n          const option = {};\n          option[field_label] = value;\n          option[field_value] = value;\n          settings_element.options.push(option);\n        });\n        settings_element.items = values;\n      } else {\n        settings_element.options = JSON.parse(data_raw);\n        iterate(settings_element.options, opt => {\n          settings_element.items.push(opt[field_value]);\n        });\n      }\n    };\n    if (tag_name === 'select') {\n      init_select();\n    } else {\n      init_textbox();\n    }\n    return Object.assign({}, defaults, settings_element, settings_user);\n  }\n  var instance_i = 0;\n  class TomSelect extends MicroPlugin(MicroEvent) {\n    constructor(input_arg, user_settings) {\n      super();\n      this.control_input = void 0;\n      this.wrapper = void 0;\n      this.dropdown = void 0;\n      this.control = void 0;\n      this.dropdown_content = void 0;\n      this.focus_node = void 0;\n      this.order = 0;\n      this.settings = void 0;\n      this.input = void 0;\n      this.tabIndex = void 0;\n      this.is_select_tag = void 0;\n      this.rtl = void 0;\n      this.inputId = void 0;\n      this._destroy = void 0;\n      this.sifter = void 0;\n      this.isOpen = false;\n      this.isDisabled = false;\n      this.isReadOnly = false;\n      this.isRequired = void 0;\n      this.isInvalid = false;\n      // @deprecated 1.8\n      this.isValid = true;\n      this.isLocked = false;\n      this.isFocused = false;\n      this.isInputHidden = false;\n      this.isSetup = false;\n      this.ignoreFocus = false;\n      this.ignoreHover = false;\n      this.hasOptions = false;\n      this.currentResults = void 0;\n      this.lastValue = '';\n      this.caretPos = 0;\n      this.loading = 0;\n      this.loadedSearches = {};\n      this.activeOption = null;\n      this.activeItems = [];\n      this.optgroups = {};\n      this.options = {};\n      this.userOptions = {};\n      this.items = [];\n      this.refreshTimeout = null;\n      instance_i++;\n      var dir;\n      var input = getDom(input_arg);\n      if (input.tomselect) {\n        throw new Error('Tom Select already initialized on this element');\n      }\n      input.tomselect = this;\n\n      // detect rtl environment\n      var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n      dir = computedStyle.getPropertyValue('direction');\n\n      // setup default state\n      const settings = getSettings(input, user_settings);\n      this.settings = settings;\n      this.input = input;\n      this.tabIndex = input.tabIndex || 0;\n      this.is_select_tag = input.tagName.toLowerCase() === 'select';\n      this.rtl = /rtl/i.test(dir);\n      this.inputId = getId(input, 'tomselect-' + instance_i);\n      this.isRequired = input.required;\n\n      // search system\n      this.sifter = new Sifter(this.options, {\n        diacritics: settings.diacritics\n      });\n\n      // option-dependent defaults\n      settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n      if (typeof settings.hideSelected !== 'boolean') {\n        settings.hideSelected = settings.mode === 'multi';\n      }\n      if (typeof settings.hidePlaceholder !== 'boolean') {\n        settings.hidePlaceholder = settings.mode !== 'multi';\n      }\n\n      // set up createFilter callback\n      var filter = settings.createFilter;\n      if (typeof filter !== 'function') {\n        if (typeof filter === 'string') {\n          filter = new RegExp(filter);\n        }\n        if (filter instanceof RegExp) {\n          settings.createFilter = input => filter.test(input);\n        } else {\n          settings.createFilter = value => {\n            return this.settings.duplicates || !this.options[value];\n          };\n        }\n      }\n      this.initializePlugins(settings.plugins);\n      this.setupCallbacks();\n      this.setupTemplates();\n\n      // Create all elements\n      const wrapper = getDom('<div>');\n      const control = getDom('<div>');\n      const dropdown = this._render('dropdown');\n      const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n      const classes = this.input.getAttribute('class') || '';\n      const inputMode = settings.mode;\n      var control_input;\n      addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n      addClasses(control, settings.controlClass);\n      append(wrapper, control);\n      addClasses(dropdown, settings.dropdownClass, inputMode);\n      if (settings.copyClassesToDropdown) {\n        addClasses(dropdown, classes);\n      }\n      addClasses(dropdown_content, settings.dropdownContentClass);\n      append(dropdown, dropdown_content);\n      getDom(settings.dropdownParent || wrapper).appendChild(dropdown);\n\n      // default controlInput\n      if (isHtmlString(settings.controlInput)) {\n        control_input = getDom(settings.controlInput);\n\n        // set attributes\n        var attrs = ['autocorrect', 'autocapitalize', 'autocomplete', 'spellcheck'];\n        iterate$1(attrs, attr => {\n          if (input.getAttribute(attr)) {\n            setAttr(control_input, {\n              [attr]: input.getAttribute(attr)\n            });\n          }\n        });\n        control_input.tabIndex = -1;\n        control.appendChild(control_input);\n        this.focus_node = control_input;\n\n        // dom element\n      } else if (settings.controlInput) {\n        control_input = getDom(settings.controlInput);\n        this.focus_node = control_input;\n      } else {\n        control_input = getDom('<input/>');\n        this.focus_node = control;\n      }\n      this.wrapper = wrapper;\n      this.dropdown = dropdown;\n      this.dropdown_content = dropdown_content;\n      this.control = control;\n      this.control_input = control_input;\n      this.setup();\n    }\n\n    /**\n     * set up event bindings.\n     *\n     */\n    setup() {\n      const self = this;\n      const settings = self.settings;\n      const control_input = self.control_input;\n      const dropdown = self.dropdown;\n      const dropdown_content = self.dropdown_content;\n      const wrapper = self.wrapper;\n      const control = self.control;\n      const input = self.input;\n      const focus_node = self.focus_node;\n      const passive_event = {\n        passive: true\n      };\n      const listboxId = self.inputId + '-ts-dropdown';\n      setAttr(dropdown_content, {\n        id: listboxId\n      });\n      setAttr(focus_node, {\n        role: 'combobox',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': 'false',\n        'aria-controls': listboxId\n      });\n      const control_id = getId(focus_node, self.inputId + '-ts-control');\n      const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n      const label = document.querySelector(query);\n      const label_click = self.focus.bind(self);\n      if (label) {\n        addEvent(label, 'click', label_click);\n        setAttr(label, {\n          for: control_id\n        });\n        const label_id = getId(label, self.inputId + '-ts-label');\n        setAttr(focus_node, {\n          'aria-labelledby': label_id\n        });\n        setAttr(dropdown_content, {\n          'aria-labelledby': label_id\n        });\n      }\n      wrapper.style.width = input.style.width;\n      if (self.plugins.names.length) {\n        const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n        addClasses([wrapper, dropdown], classes_plugins);\n      }\n      if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n        setAttr(input, {\n          multiple: 'multiple'\n        });\n      }\n      if (settings.placeholder) {\n        setAttr(control_input, {\n          placeholder: settings.placeholder\n        });\n      }\n\n      // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n      if (!settings.splitOn && settings.delimiter) {\n        settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n      }\n\n      // debounce user defined load() if loadThrottle > 0\n      // after initializePlugins() so plugins can create/modify user defined loaders\n      if (settings.load && settings.loadThrottle) {\n        settings.load = loadDebounce(settings.load, settings.loadThrottle);\n      }\n      addEvent(dropdown, 'mousemove', () => {\n        self.ignoreHover = false;\n      });\n      addEvent(dropdown, 'mouseenter', e => {\n        var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n        if (target_match) self.onOptionHover(e, target_match);\n      }, {\n        capture: true\n      });\n\n      // clicking on an option should select it\n      addEvent(dropdown, 'click', evt => {\n        const option = parentMatch(evt.target, '[data-selectable]');\n        if (option) {\n          self.onOptionSelect(evt, option);\n          preventDefault(evt, true);\n        }\n      });\n      addEvent(control, 'click', evt => {\n        var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n        if (target_match && self.onItemSelect(evt, target_match)) {\n          preventDefault(evt, true);\n          return;\n        }\n\n        // retain focus (see control_input mousedown)\n        if (control_input.value != '') {\n          return;\n        }\n        self.onClick();\n        preventDefault(evt, true);\n      });\n\n      // keydown on focus_node for arrow_down/arrow_up\n      addEvent(focus_node, 'keydown', e => self.onKeyDown(e));\n\n      // keypress and input/keyup\n      addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n      addEvent(control_input, 'input', e => self.onInput(e));\n      addEvent(focus_node, 'blur', e => self.onBlur(e));\n      addEvent(focus_node, 'focus', e => self.onFocus(e));\n      addEvent(control_input, 'paste', e => self.onPaste(e));\n      const doc_mousedown = evt => {\n        // blur if target is outside of this instance\n        // dropdown is not always inside wrapper\n        const target = evt.composedPath()[0];\n        if (!wrapper.contains(target) && !dropdown.contains(target)) {\n          if (self.isFocused) {\n            self.blur();\n          }\n          self.inputState();\n          return;\n        }\n\n        // retain focus by preventing native handling. if the\n        // event target is the input it should not be modified.\n        // otherwise, text selection within the input won't work.\n        // Fixes bug #212 which is no covered by tests\n        if (target == control_input && self.isOpen) {\n          evt.stopPropagation();\n\n          // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n        } else {\n          preventDefault(evt, true);\n        }\n      };\n      const win_scroll = () => {\n        if (self.isOpen) {\n          self.positionDropdown();\n        }\n      };\n      addEvent(document, 'mousedown', doc_mousedown);\n      addEvent(window, 'scroll', win_scroll, passive_event);\n      addEvent(window, 'resize', win_scroll, passive_event);\n      this._destroy = () => {\n        document.removeEventListener('mousedown', doc_mousedown);\n        window.removeEventListener('scroll', win_scroll);\n        window.removeEventListener('resize', win_scroll);\n        if (label) label.removeEventListener('click', label_click);\n      };\n\n      // store original html and tab index so that they can be\n      // restored when the destroy() method is called.\n      this.revertSettings = {\n        innerHTML: input.innerHTML,\n        tabIndex: input.tabIndex\n      };\n      input.tabIndex = -1;\n      input.insertAdjacentElement('afterend', self.wrapper);\n      self.sync(false);\n      settings.items = [];\n      delete settings.optgroups;\n      delete settings.options;\n      addEvent(input, 'invalid', () => {\n        if (self.isValid) {\n          self.isValid = false;\n          self.isInvalid = true;\n          self.refreshState();\n        }\n      });\n      self.updateOriginalInput();\n      self.refreshItems();\n      self.close(false);\n      self.inputState();\n      self.isSetup = true;\n      if (input.disabled) {\n        self.disable();\n      } else if (input.readOnly) {\n        self.setReadOnly(true);\n      } else {\n        self.enable(); //sets tabIndex\n      }\n      self.on('change', this.onChange);\n      addClasses(input, 'tomselected', 'ts-hidden-accessible');\n      self.trigger('initialize');\n\n      // preload options\n      if (settings.preload === true) {\n        self.preload();\n      }\n    }\n\n    /**\n     * Register options and optgroups\n     *\n     */\n    setupOptions(options = [], optgroups = []) {\n      // build options table\n      this.addOptions(options);\n\n      // build optgroup table\n      iterate$1(optgroups, optgroup => {\n        this.registerOptionGroup(optgroup);\n      });\n    }\n\n    /**\n     * Sets up default rendering functions.\n     */\n    setupTemplates() {\n      var self = this;\n      var field_label = self.settings.labelField;\n      var field_optgroup = self.settings.optgroupLabelField;\n      var templates = {\n        'optgroup': data => {\n          let optgroup = document.createElement('div');\n          optgroup.className = 'optgroup';\n          optgroup.appendChild(data.options);\n          return optgroup;\n        },\n        'optgroup_header': (data, escape) => {\n          return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n        },\n        'option': (data, escape) => {\n          return '<div>' + escape(data[field_label]) + '</div>';\n        },\n        'item': (data, escape) => {\n          return '<div>' + escape(data[field_label]) + '</div>';\n        },\n        'option_create': (data, escape) => {\n          return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n        },\n        'no_results': () => {\n          return '<div class=\"no-results\">No results found</div>';\n        },\n        'loading': () => {\n          return '<div class=\"spinner\"></div>';\n        },\n        'not_loading': () => {},\n        'dropdown': () => {\n          return '<div></div>';\n        }\n      };\n      self.settings.render = Object.assign({}, templates, self.settings.render);\n    }\n\n    /**\n     * Maps fired events to callbacks provided\n     * in the settings used when creating the control.\n     */\n    setupCallbacks() {\n      var key, fn;\n      var callbacks = {\n        'initialize': 'onInitialize',\n        'change': 'onChange',\n        'item_add': 'onItemAdd',\n        'item_remove': 'onItemRemove',\n        'item_select': 'onItemSelect',\n        'clear': 'onClear',\n        'option_add': 'onOptionAdd',\n        'option_remove': 'onOptionRemove',\n        'option_clear': 'onOptionClear',\n        'optgroup_add': 'onOptionGroupAdd',\n        'optgroup_remove': 'onOptionGroupRemove',\n        'optgroup_clear': 'onOptionGroupClear',\n        'dropdown_open': 'onDropdownOpen',\n        'dropdown_close': 'onDropdownClose',\n        'type': 'onType',\n        'load': 'onLoad',\n        'focus': 'onFocus',\n        'blur': 'onBlur'\n      };\n      for (key in callbacks) {\n        fn = this.settings[callbacks[key]];\n        if (fn) this.on(key, fn);\n      }\n    }\n\n    /**\n     * Sync the Tom Select instance with the original input or select\n     *\n     */\n    sync(get_settings = true) {\n      const self = this;\n      const settings = get_settings ? getSettings(self.input, {\n        delimiter: self.settings.delimiter\n      }) : self.settings;\n      self.setupOptions(settings.options, settings.optgroups);\n      self.setValue(settings.items || [], true); // silent prevents recursion\n\n      self.lastQuery = null; // so updated options will be displayed in dropdown\n    }\n\n    /**\n     * Triggered when the main control element\n     * has a click event.\n     *\n     */\n    onClick() {\n      var self = this;\n      if (self.activeItems.length > 0) {\n        self.clearActiveItems();\n        self.focus();\n        return;\n      }\n      if (self.isFocused && self.isOpen) {\n        self.blur();\n      } else {\n        self.focus();\n      }\n    }\n\n    /**\n     * @deprecated v1.7\n     *\n     */\n    onMouseDown() {}\n\n    /**\n     * Triggered when the value of the control has been changed.\n     * This should propagate the event to the original DOM\n     * input / select element.\n     */\n    onChange() {\n      triggerEvent(this.input, 'input');\n      triggerEvent(this.input, 'change');\n    }\n\n    /**\n     * Triggered on <input> paste.\n     *\n     */\n    onPaste(e) {\n      var self = this;\n      if (self.isInputHidden || self.isLocked) {\n        preventDefault(e);\n        return;\n      }\n\n      // If a regex or string is included, this will split the pasted\n      // input and create Items for each separate value\n      if (!self.settings.splitOn) {\n        return;\n      }\n\n      // Wait for pasted text to be recognized in value\n      setTimeout(() => {\n        var pastedText = self.inputValue();\n        if (!pastedText.match(self.settings.splitOn)) {\n          return;\n        }\n        var splitInput = pastedText.trim().split(self.settings.splitOn);\n        iterate$1(splitInput, piece => {\n          const hash = hash_key(piece);\n          if (hash) {\n            if (this.options[piece]) {\n              self.addItem(piece);\n            } else {\n              self.createItem(piece);\n            }\n          }\n        });\n      }, 0);\n    }\n\n    /**\n     * Triggered on <input> keypress.\n     *\n     */\n    onKeyPress(e) {\n      var self = this;\n      if (self.isLocked) {\n        preventDefault(e);\n        return;\n      }\n      var character = String.fromCharCode(e.keyCode || e.which);\n      if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n        self.createItem();\n        preventDefault(e);\n        return;\n      }\n    }\n\n    /**\n     * Triggered on <input> keydown.\n     *\n     */\n    onKeyDown(e) {\n      var self = this;\n      self.ignoreHover = true;\n      if (self.isLocked) {\n        if (e.keyCode !== KEY_TAB) {\n          preventDefault(e);\n        }\n        return;\n      }\n      switch (e.keyCode) {\n        // ctrl+A: select all\n        case KEY_A:\n          if (isKeyDown(KEY_SHORTCUT, e)) {\n            if (self.control_input.value == '') {\n              preventDefault(e);\n              self.selectAll();\n              return;\n            }\n          }\n          break;\n\n        // esc: close dropdown\n        case KEY_ESC:\n          if (self.isOpen) {\n            preventDefault(e, true);\n            self.close();\n          }\n          self.clearActiveItems();\n          return;\n\n        // down: open dropdown or move selection down\n        case KEY_DOWN:\n          if (!self.isOpen && self.hasOptions) {\n            self.open();\n          } else if (self.activeOption) {\n            let next = self.getAdjacent(self.activeOption, 1);\n            if (next) self.setActiveOption(next);\n          }\n          preventDefault(e);\n          return;\n\n        // up: move selection up\n        case KEY_UP:\n          if (self.activeOption) {\n            let prev = self.getAdjacent(self.activeOption, -1);\n            if (prev) self.setActiveOption(prev);\n          }\n          preventDefault(e);\n          return;\n\n        // return: select active option\n        case KEY_RETURN:\n          if (self.canSelect(self.activeOption)) {\n            self.onOptionSelect(e, self.activeOption);\n            preventDefault(e);\n\n            // if the option_create=null, the dropdown might be closed\n          } else if (self.settings.create && self.createItem()) {\n            preventDefault(e);\n\n            // don't submit form when searching for a value\n          } else if (document.activeElement == self.control_input && self.isOpen) {\n            preventDefault(e);\n          }\n          return;\n\n        // left: modifiy item selection to the left\n        case KEY_LEFT:\n          self.advanceSelection(-1, e);\n          return;\n\n        // right: modifiy item selection to the right\n        case KEY_RIGHT:\n          self.advanceSelection(1, e);\n          return;\n\n        // tab: select active option and/or create item\n        case KEY_TAB:\n          if (self.settings.selectOnTab) {\n            if (self.canSelect(self.activeOption)) {\n              self.onOptionSelect(e, self.activeOption);\n\n              // prevent default [tab] behaviour of jump to the next field\n              // if select isFull, then the dropdown won't be open and [tab] will work normally\n              preventDefault(e);\n            }\n            if (self.settings.create && self.createItem()) {\n              preventDefault(e);\n            }\n          }\n          return;\n\n        // delete|backspace: delete items\n        case KEY_BACKSPACE:\n        case KEY_DELETE:\n          self.deleteSelection(e);\n          return;\n      }\n\n      // don't enter text in the control_input when active items are selected\n      if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n        preventDefault(e);\n      }\n    }\n\n    /**\n     * Triggered on <input> keyup.\n     *\n     */\n    onInput(e) {\n      if (this.isLocked) {\n        return;\n      }\n      const value = this.inputValue();\n      if (this.lastValue === value) return;\n      this.lastValue = value;\n      if (value == '') {\n        this._onInput();\n        return;\n      }\n      if (this.refreshTimeout) {\n        clearTimeout(this.refreshTimeout);\n      }\n      this.refreshTimeout = timeout(() => {\n        this.refreshTimeout = null;\n        this._onInput();\n      }, this.settings.refreshThrottle);\n    }\n    _onInput() {\n      const value = this.lastValue;\n      if (this.settings.shouldLoad.call(this, value)) {\n        this.load(value);\n      }\n      this.refreshOptions();\n      this.trigger('type', value);\n    }\n\n    /**\n     * Triggered when the user rolls over\n     * an option in the autocomplete dropdown menu.\n     *\n     */\n    onOptionHover(evt, option) {\n      if (this.ignoreHover) return;\n      this.setActiveOption(option, false);\n    }\n\n    /**\n     * Triggered on <input> focus.\n     *\n     */\n    onFocus(e) {\n      var self = this;\n      var wasFocused = self.isFocused;\n      if (self.isDisabled || self.isReadOnly) {\n        self.blur();\n        preventDefault(e);\n        return;\n      }\n      if (self.ignoreFocus) return;\n      self.isFocused = true;\n      if (self.settings.preload === 'focus') self.preload();\n      if (!wasFocused) self.trigger('focus');\n      if (!self.activeItems.length) {\n        self.inputState();\n        self.refreshOptions(!!self.settings.openOnFocus);\n      }\n      self.refreshState();\n    }\n\n    /**\n     * Triggered on <input> blur.\n     *\n     */\n    onBlur(e) {\n      if (document.hasFocus() === false) return;\n      var self = this;\n      if (!self.isFocused) return;\n      self.isFocused = false;\n      self.ignoreFocus = false;\n      var deactivate = () => {\n        self.close();\n        self.setActiveItem();\n        self.setCaret(self.items.length);\n        self.trigger('blur');\n      };\n      if (self.settings.create && self.settings.createOnBlur) {\n        self.createItem(null, deactivate);\n      } else {\n        deactivate();\n      }\n    }\n\n    /**\n     * Triggered when the user clicks on an option\n     * in the autocomplete dropdown menu.\n     *\n     */\n    onOptionSelect(evt, option) {\n      var value,\n        self = this;\n\n      // should not be possible to trigger a option under a disabled optgroup\n      if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n        return;\n      }\n      if (option.classList.contains('create')) {\n        self.createItem(null, () => {\n          if (self.settings.closeAfterSelect) {\n            self.close();\n          }\n        });\n      } else {\n        value = option.dataset.value;\n        if (typeof value !== 'undefined') {\n          self.lastQuery = null;\n          self.addItem(value);\n          if (self.settings.closeAfterSelect) {\n            self.close();\n          }\n          if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n            self.setActiveOption(option);\n          }\n        }\n      }\n    }\n\n    /**\n     * Return true if the given option can be selected\n     *\n     */\n    canSelect(option) {\n      if (this.isOpen && option && this.dropdown_content.contains(option)) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Triggered when the user clicks on an item\n     * that has been selected.\n     *\n     */\n    onItemSelect(evt, item) {\n      var self = this;\n      if (!self.isLocked && self.settings.mode === 'multi') {\n        preventDefault(evt);\n        self.setActiveItem(item, evt);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Determines whether or not to invoke\n     * the user-provided option provider / loader\n     *\n     * Note, there is a subtle difference between\n     * this.canLoad() and this.settings.shouldLoad();\n     *\n     *\t- settings.shouldLoad() is a user-input validator.\n     *\tWhen false is returned, the not_loading template\n     *\twill be added to the dropdown\n     *\n     *\t- canLoad() is lower level validator that checks\n     * \tthe Tom Select instance. There is no inherent user\n     *\tfeedback when canLoad returns false\n     *\n     */\n    canLoad(value) {\n      if (!this.settings.load) return false;\n      if (this.loadedSearches.hasOwnProperty(value)) return false;\n      return true;\n    }\n\n    /**\n     * Invokes the user-provided option provider / loader.\n     *\n     */\n    load(value) {\n      const self = this;\n      if (!self.canLoad(value)) return;\n      addClasses(self.wrapper, self.settings.loadingClass);\n      self.loading++;\n      const callback = self.loadCallback.bind(self);\n      self.settings.load.call(self, value, callback);\n    }\n\n    /**\n     * Invoked by the user-provided option provider\n     *\n     */\n    loadCallback(options, optgroups) {\n      const self = this;\n      self.loading = Math.max(self.loading - 1, 0);\n      self.lastQuery = null;\n      self.clearActiveOption(); // when new results load, focus should be on first option\n      self.setupOptions(options, optgroups);\n      self.refreshOptions(self.isFocused && !self.isInputHidden);\n      if (!self.loading) {\n        removeClasses(self.wrapper, self.settings.loadingClass);\n      }\n      self.trigger('load', options, optgroups);\n    }\n    preload() {\n      var classList = this.wrapper.classList;\n      if (classList.contains('preloaded')) return;\n      classList.add('preloaded');\n      this.load('');\n    }\n\n    /**\n     * Sets the input field of the control to the specified value.\n     *\n     */\n    setTextboxValue(value = '') {\n      var input = this.control_input;\n      var changed = input.value !== value;\n      if (changed) {\n        input.value = value;\n        triggerEvent(input, 'update');\n        this.lastValue = value;\n      }\n    }\n\n    /**\n     * Returns the value of the control. If multiple items\n     * can be selected (e.g. <select multiple>), this returns\n     * an array. If only one item can be selected, this\n     * returns a string.\n     *\n     */\n    getValue() {\n      if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n        return this.items;\n      }\n      return this.items.join(this.settings.delimiter);\n    }\n\n    /**\n     * Resets the selected items to the given value.\n     *\n     */\n    setValue(value, silent) {\n      var events = silent ? [] : ['change'];\n      debounce_events(this, events, () => {\n        this.clear(silent);\n        this.addItems(value, silent);\n      });\n    }\n\n    /**\n     * Resets the number of max items to the given value\n     *\n     */\n    setMaxItems(value) {\n      if (value === 0) value = null; //reset to unlimited items.\n      this.settings.maxItems = value;\n      this.refreshState();\n    }\n\n    /**\n     * Sets the selected item.\n     *\n     */\n    setActiveItem(item, e) {\n      var self = this;\n      var eventName;\n      var i, begin, end, swap;\n      var last;\n      if (self.settings.mode === 'single') return;\n\n      // clear the active selection\n      if (!item) {\n        self.clearActiveItems();\n        if (self.isFocused) {\n          self.inputState();\n        }\n        return;\n      }\n\n      // modify selection\n      eventName = e && e.type.toLowerCase();\n      if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n        last = self.getLastActive();\n        begin = Array.prototype.indexOf.call(self.control.children, last);\n        end = Array.prototype.indexOf.call(self.control.children, item);\n        if (begin > end) {\n          swap = begin;\n          begin = end;\n          end = swap;\n        }\n        for (i = begin; i <= end; i++) {\n          item = self.control.children[i];\n          if (self.activeItems.indexOf(item) === -1) {\n            self.setActiveItemClass(item);\n          }\n        }\n        preventDefault(e);\n      } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n        if (item.classList.contains('active')) {\n          self.removeActiveItem(item);\n        } else {\n          self.setActiveItemClass(item);\n        }\n      } else {\n        self.clearActiveItems();\n        self.setActiveItemClass(item);\n      }\n\n      // ensure control has focus\n      self.inputState();\n      if (!self.isFocused) {\n        self.focus();\n      }\n    }\n\n    /**\n     * Set the active and last-active classes\n     *\n     */\n    setActiveItemClass(item) {\n      const self = this;\n      const last_active = self.control.querySelector('.last-active');\n      if (last_active) removeClasses(last_active, 'last-active');\n      addClasses(item, 'active last-active');\n      self.trigger('item_select', item);\n      if (self.activeItems.indexOf(item) == -1) {\n        self.activeItems.push(item);\n      }\n    }\n\n    /**\n     * Remove active item\n     *\n     */\n    removeActiveItem(item) {\n      var idx = this.activeItems.indexOf(item);\n      this.activeItems.splice(idx, 1);\n      removeClasses(item, 'active');\n    }\n\n    /**\n     * Clears all the active items\n     *\n     */\n    clearActiveItems() {\n      removeClasses(this.activeItems, 'active');\n      this.activeItems = [];\n    }\n\n    /**\n     * Sets the selected item in the dropdown menu\n     * of available options.\n     *\n     */\n    setActiveOption(option, scroll = true) {\n      if (option === this.activeOption) {\n        return;\n      }\n      this.clearActiveOption();\n      if (!option) return;\n      this.activeOption = option;\n      setAttr(this.focus_node, {\n        'aria-activedescendant': option.getAttribute('id')\n      });\n      setAttr(option, {\n        'aria-selected': 'true'\n      });\n      addClasses(option, 'active');\n      if (scroll) this.scrollToOption(option);\n    }\n\n    /**\n     * Sets the dropdown_content scrollTop to display the option\n     *\n     */\n    scrollToOption(option, behavior) {\n      if (!option) return;\n      const content = this.dropdown_content;\n      const height_menu = content.clientHeight;\n      const scrollTop = content.scrollTop || 0;\n      const height_item = option.offsetHeight;\n      const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n      if (y + height_item > height_menu + scrollTop) {\n        this.scroll(y - height_menu + height_item, behavior);\n      } else if (y < scrollTop) {\n        this.scroll(y, behavior);\n      }\n    }\n\n    /**\n     * Scroll the dropdown to the given position\n     *\n     */\n    scroll(scrollTop, behavior) {\n      const content = this.dropdown_content;\n      if (behavior) {\n        content.style.scrollBehavior = behavior;\n      }\n      content.scrollTop = scrollTop;\n      content.style.scrollBehavior = '';\n    }\n\n    /**\n     * Clears the active option\n     *\n     */\n    clearActiveOption() {\n      if (this.activeOption) {\n        removeClasses(this.activeOption, 'active');\n        setAttr(this.activeOption, {\n          'aria-selected': null\n        });\n      }\n      this.activeOption = null;\n      setAttr(this.focus_node, {\n        'aria-activedescendant': null\n      });\n    }\n\n    /**\n     * Selects all items (CTRL + A).\n     */\n    selectAll() {\n      const self = this;\n      if (self.settings.mode === 'single') return;\n      const activeItems = self.controlChildren();\n      if (!activeItems.length) return;\n      self.inputState();\n      self.close();\n      self.activeItems = activeItems;\n      iterate$1(activeItems, item => {\n        self.setActiveItemClass(item);\n      });\n    }\n\n    /**\n     * Determines if the control_input should be in a hidden or visible state\n     *\n     */\n    inputState() {\n      var self = this;\n      if (!self.control.contains(self.control_input)) return;\n      setAttr(self.control_input, {\n        placeholder: self.settings.placeholder\n      });\n      if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n        self.setTextboxValue();\n        self.isInputHidden = true;\n      } else {\n        if (self.settings.hidePlaceholder && self.items.length > 0) {\n          setAttr(self.control_input, {\n            placeholder: ''\n          });\n        }\n        self.isInputHidden = false;\n      }\n      self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n    }\n\n    /**\n     * Get the input value\n     */\n    inputValue() {\n      return this.control_input.value.trim();\n    }\n\n    /**\n     * Gives the control focus.\n     */\n    focus() {\n      var self = this;\n      if (self.isDisabled || self.isReadOnly) return;\n      self.ignoreFocus = true;\n      if (self.control_input.offsetWidth) {\n        self.control_input.focus();\n      } else {\n        self.focus_node.focus();\n      }\n      setTimeout(() => {\n        self.ignoreFocus = false;\n        self.onFocus();\n      }, 0);\n    }\n\n    /**\n     * Forces the control out of focus.\n     *\n     */\n    blur() {\n      this.focus_node.blur();\n      this.onBlur();\n    }\n\n    /**\n     * Returns a function that scores an object\n     * to show how good of a match it is to the\n     * provided query.\n     *\n     * @return {function}\n     */\n    getScoreFunction(query) {\n      return this.sifter.getScoreFunction(query, this.getSearchOptions());\n    }\n\n    /**\n     * Returns search options for sifter (the system\n     * for scoring and sorting results).\n     *\n     * @see https://github.com/orchidjs/sifter.js\n     * @return {object}\n     */\n    getSearchOptions() {\n      var settings = this.settings;\n      var sort = settings.sortField;\n      if (typeof settings.sortField === 'string') {\n        sort = [{\n          field: settings.sortField\n        }];\n      }\n      return {\n        fields: settings.searchField,\n        conjunction: settings.searchConjunction,\n        sort: sort,\n        nesting: settings.nesting\n      };\n    }\n\n    /**\n     * Searches through available options and returns\n     * a sorted array of matches.\n     *\n     */\n    search(query) {\n      var result, calculateScore;\n      var self = this;\n      var options = this.getSearchOptions();\n\n      // validate user-provided result scoring function\n      if (self.settings.score) {\n        calculateScore = self.settings.score.call(self, query);\n        if (typeof calculateScore !== 'function') {\n          throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n        }\n      }\n\n      // perform search\n      if (query !== self.lastQuery) {\n        self.lastQuery = query;\n        result = self.sifter.search(query, Object.assign(options, {\n          score: calculateScore\n        }));\n        self.currentResults = result;\n      } else {\n        result = Object.assign({}, self.currentResults);\n      }\n\n      // filter out selected items\n      if (self.settings.hideSelected) {\n        result.items = result.items.filter(item => {\n          let hashed = hash_key(item.id);\n          return !(hashed && self.items.indexOf(hashed) !== -1);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Refreshes the list of available options shown\n     * in the autocomplete dropdown menu.\n     *\n     */\n    refreshOptions(triggerDropdown = true) {\n      var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n      var create;\n      const groups = {};\n      const groups_order = [];\n      var self = this;\n      var query = self.inputValue();\n      const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n      var results = self.search(query);\n      var active_option = null;\n      var show_dropdown = self.settings.shouldOpen || false;\n      var dropdown_content = self.dropdown_content;\n      if (same_query) {\n        active_option = self.activeOption;\n        if (active_option) {\n          active_group = active_option.closest('[data-group]');\n        }\n      }\n\n      // build markup\n      n = results.items.length;\n      if (typeof self.settings.maxOptions === 'number') {\n        n = Math.min(n, self.settings.maxOptions);\n      }\n      if (n > 0) {\n        show_dropdown = true;\n      }\n\n      // get fragment for group and the position of the group in group_order\n      const getGroupFragment = (optgroup, order) => {\n        let group_order_i = groups[optgroup];\n        if (group_order_i !== undefined) {\n          let order_group = groups_order[group_order_i];\n          if (order_group !== undefined) {\n            return [group_order_i, order_group.fragment];\n          }\n        }\n        let group_fragment = document.createDocumentFragment();\n        group_order_i = groups_order.length;\n        groups_order.push({\n          fragment: group_fragment,\n          order,\n          optgroup\n        });\n        return [group_order_i, group_fragment];\n      };\n\n      // render and group available options individually\n      for (i = 0; i < n; i++) {\n        // get option dom element\n        let item = results.items[i];\n        if (!item) continue;\n        let opt_value = item.id;\n        let option = self.options[opt_value];\n        if (option === undefined) continue;\n        let opt_hash = get_hash(opt_value);\n        let option_el = self.getOption(opt_hash, true);\n\n        // toggle 'selected' class\n        if (!self.settings.hideSelected) {\n          option_el.classList.toggle('selected', self.items.includes(opt_hash));\n        }\n        optgroup = option[self.settings.optgroupField] || '';\n        optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n        for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n          optgroup = optgroups[j];\n          let order = option.$order;\n          let self_optgroup = self.optgroups[optgroup];\n          if (self_optgroup === undefined) {\n            optgroup = '';\n          } else {\n            order = self_optgroup.$order;\n          }\n          const [group_order_i, group_fragment] = getGroupFragment(optgroup, order);\n\n          // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n          if (j > 0) {\n            option_el = option_el.cloneNode(true);\n            setAttr(option_el, {\n              id: option.$id + '-clone-' + j,\n              'aria-selected': null\n            });\n            option_el.classList.add('ts-cloned');\n            removeClasses(option_el, 'active');\n\n            // make sure we keep the activeOption in the same group\n            if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n              if (active_group && active_group.dataset.group === optgroup.toString()) {\n                active_option = option_el;\n              }\n            }\n          }\n          group_fragment.appendChild(option_el);\n          if (optgroup != '') {\n            groups[optgroup] = group_order_i;\n          }\n        }\n      }\n\n      // sort optgroups\n      if (self.settings.lockOptgroupOrder) {\n        groups_order.sort((a, b) => {\n          return a.order - b.order;\n        });\n      }\n\n      // render optgroup headers & join groups\n      html = document.createDocumentFragment();\n      iterate$1(groups_order, group_order => {\n        let group_fragment = group_order.fragment;\n        let optgroup = group_order.optgroup;\n        if (!group_fragment || !group_fragment.children.length) return;\n        let group_heading = self.optgroups[optgroup];\n        if (group_heading !== undefined) {\n          let group_options = document.createDocumentFragment();\n          let header = self.render('optgroup_header', group_heading);\n          append(group_options, header);\n          append(group_options, group_fragment);\n          let group_html = self.render('optgroup', {\n            group: group_heading,\n            options: group_options\n          });\n          append(html, group_html);\n        } else {\n          append(html, group_fragment);\n        }\n      });\n      dropdown_content.innerHTML = '';\n      append(dropdown_content, html);\n\n      // highlight matching terms inline\n      if (self.settings.highlight) {\n        removeHighlight(dropdown_content);\n        if (results.query.length && results.tokens.length) {\n          iterate$1(results.tokens, tok => {\n            highlight(dropdown_content, tok.regex);\n          });\n        }\n      }\n\n      // helper method for adding templates to dropdown\n      var add_template = template => {\n        let content = self.render(template, {\n          input: query\n        });\n        if (content) {\n          show_dropdown = true;\n          dropdown_content.insertBefore(content, dropdown_content.firstChild);\n        }\n        return content;\n      };\n\n      // add loading message\n      if (self.loading) {\n        add_template('loading');\n\n        // invalid query\n      } else if (!self.settings.shouldLoad.call(self, query)) {\n        add_template('not_loading');\n\n        // add no_results message\n      } else if (results.items.length === 0) {\n        add_template('no_results');\n      }\n\n      // add create option\n      has_create_option = self.canCreate(query);\n      if (has_create_option) {\n        create = add_template('option_create');\n      }\n\n      // activate\n      self.hasOptions = results.items.length > 0 || has_create_option;\n      if (show_dropdown) {\n        if (results.items.length > 0) {\n          if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n            active_option = self.getOption(self.items[0]);\n          }\n          if (!dropdown_content.contains(active_option)) {\n            let active_index = 0;\n            if (create && !self.settings.addPrecedence) {\n              active_index = 1;\n            }\n            active_option = self.selectable()[active_index];\n          }\n        } else if (create) {\n          active_option = create;\n        }\n        if (triggerDropdown && !self.isOpen) {\n          self.open();\n          self.scrollToOption(active_option, 'auto');\n        }\n        self.setActiveOption(active_option);\n      } else {\n        self.clearActiveOption();\n        if (triggerDropdown && self.isOpen) {\n          self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n        }\n      }\n    }\n\n    /**\n     * Return list of selectable options\n     *\n     */\n    selectable() {\n      return this.dropdown_content.querySelectorAll('[data-selectable]');\n    }\n\n    /**\n     * Adds an available option. If it already exists,\n     * nothing will happen. Note: this does not refresh\n     * the options list dropdown (use `refreshOptions`\n     * for that).\n     *\n     * Usage:\n     *\n     *   this.addOption(data)\n     *\n     */\n    addOption(data, user_created = false) {\n      const self = this;\n\n      // @deprecated 1.7.7\n      // use addOptions( array, user_created ) for adding multiple options\n      if (Array.isArray(data)) {\n        self.addOptions(data, user_created);\n        return false;\n      }\n      const key = hash_key(data[self.settings.valueField]);\n      if (key === null || self.options.hasOwnProperty(key)) {\n        return false;\n      }\n      data.$order = data.$order || ++self.order;\n      data.$id = self.inputId + '-opt-' + data.$order;\n      self.options[key] = data;\n      self.lastQuery = null;\n      if (user_created) {\n        self.userOptions[key] = user_created;\n        self.trigger('option_add', key, data);\n      }\n      return key;\n    }\n\n    /**\n     * Add multiple options\n     *\n     */\n    addOptions(data, user_created = false) {\n      iterate$1(data, dat => {\n        this.addOption(dat, user_created);\n      });\n    }\n\n    /**\n     * @deprecated 1.7.7\n     */\n    registerOption(data) {\n      return this.addOption(data);\n    }\n\n    /**\n     * Registers an option group to the pool of option groups.\n     *\n     * @return {boolean|string}\n     */\n    registerOptionGroup(data) {\n      var key = hash_key(data[this.settings.optgroupValueField]);\n      if (key === null) return false;\n      data.$order = data.$order || ++this.order;\n      this.optgroups[key] = data;\n      return key;\n    }\n\n    /**\n     * Registers a new optgroup for options\n     * to be bucketed into.\n     *\n     */\n    addOptionGroup(id, data) {\n      var hashed_id;\n      data[this.settings.optgroupValueField] = id;\n      if (hashed_id = this.registerOptionGroup(data)) {\n        this.trigger('optgroup_add', hashed_id, data);\n      }\n    }\n\n    /**\n     * Removes an existing option group.\n     *\n     */\n    removeOptionGroup(id) {\n      if (this.optgroups.hasOwnProperty(id)) {\n        delete this.optgroups[id];\n        this.clearCache();\n        this.trigger('optgroup_remove', id);\n      }\n    }\n\n    /**\n     * Clears all existing option groups.\n     */\n    clearOptionGroups() {\n      this.optgroups = {};\n      this.clearCache();\n      this.trigger('optgroup_clear');\n    }\n\n    /**\n     * Updates an option available for selection. If\n     * it is visible in the selected items or options\n     * dropdown, it will be re-rendered automatically.\n     *\n     */\n    updateOption(value, data) {\n      const self = this;\n      var item_new;\n      var index_item;\n      const value_old = hash_key(value);\n      const value_new = hash_key(data[self.settings.valueField]);\n\n      // sanity checks\n      if (value_old === null) return;\n      const data_old = self.options[value_old];\n      if (data_old == undefined) return;\n      if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n      const option = self.getOption(value_old);\n      const item = self.getItem(value_old);\n      data.$order = data.$order || data_old.$order;\n      delete self.options[value_old];\n\n      // invalidate render cache\n      // don't remove existing node yet, we'll remove it after replacing it\n      self.uncacheValue(value_new);\n      self.options[value_new] = data;\n\n      // update the option if it's in the dropdown\n      if (option) {\n        if (self.dropdown_content.contains(option)) {\n          const option_new = self._render('option', data);\n          replaceNode(option, option_new);\n          if (self.activeOption === option) {\n            self.setActiveOption(option_new);\n          }\n        }\n        option.remove();\n      }\n\n      // update the item if we have one\n      if (item) {\n        index_item = self.items.indexOf(value_old);\n        if (index_item !== -1) {\n          self.items.splice(index_item, 1, value_new);\n        }\n        item_new = self._render('item', data);\n        if (item.classList.contains('active')) addClasses(item_new, 'active');\n        replaceNode(item, item_new);\n      }\n\n      // invalidate last query because we might have updated the sortField\n      self.lastQuery = null;\n    }\n\n    /**\n     * Removes a single option.\n     *\n     */\n    removeOption(value, silent) {\n      const self = this;\n      value = get_hash(value);\n      self.uncacheValue(value);\n      delete self.userOptions[value];\n      delete self.options[value];\n      self.lastQuery = null;\n      self.trigger('option_remove', value);\n      self.removeItem(value, silent);\n    }\n\n    /**\n     * Clears all options.\n     */\n    clearOptions(filter) {\n      const boundFilter = (filter || this.clearFilter).bind(this);\n      this.loadedSearches = {};\n      this.userOptions = {};\n      this.clearCache();\n      const selected = {};\n      iterate$1(this.options, (option, key) => {\n        if (boundFilter(option, key)) {\n          selected[key] = option;\n        }\n      });\n      this.options = this.sifter.items = selected;\n      this.lastQuery = null;\n      this.trigger('option_clear');\n    }\n\n    /**\n     * Used by clearOptions() to decide whether or not an option should be removed\n     * Return true to keep an option, false to remove\n     *\n     */\n    clearFilter(option, value) {\n      if (this.items.indexOf(value) >= 0) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Returns the dom element of the option\n     * matching the given value.\n     *\n     */\n    getOption(value, create = false) {\n      const hashed = hash_key(value);\n      if (hashed === null) return null;\n      const option = this.options[hashed];\n      if (option != undefined) {\n        if (option.$div) {\n          return option.$div;\n        }\n        if (create) {\n          return this._render('option', option);\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Returns the dom element of the next or previous dom element of the same type\n     * Note: adjacent options may not be adjacent DOM elements (optgroups)\n     *\n     */\n    getAdjacent(option, direction, type = 'option') {\n      var self = this,\n        all;\n      if (!option) {\n        return null;\n      }\n      if (type == 'item') {\n        all = self.controlChildren();\n      } else {\n        all = self.dropdown_content.querySelectorAll('[data-selectable]');\n      }\n      for (let i = 0; i < all.length; i++) {\n        if (all[i] != option) {\n          continue;\n        }\n        if (direction > 0) {\n          return all[i + 1];\n        }\n        return all[i - 1];\n      }\n      return null;\n    }\n\n    /**\n     * Returns the dom element of the item\n     * matching the given value.\n     *\n     */\n    getItem(item) {\n      if (typeof item == 'object') {\n        return item;\n      }\n      var value = hash_key(item);\n      return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n    }\n\n    /**\n     * \"Selects\" multiple items at once. Adds them to the list\n     * at the current caret position.\n     *\n     */\n    addItems(values, silent) {\n      var self = this;\n      var items = Array.isArray(values) ? values : [values];\n      items = items.filter(x => self.items.indexOf(x) === -1);\n      const last_item = items[items.length - 1];\n      items.forEach(item => {\n        self.isPending = item !== last_item;\n        self.addItem(item, silent);\n      });\n    }\n\n    /**\n     * \"Selects\" an item. Adds it to the list\n     * at the current caret position.\n     *\n     */\n    addItem(value, silent) {\n      var events = silent ? [] : ['change', 'dropdown_close'];\n      debounce_events(this, events, () => {\n        var item, wasFull;\n        const self = this;\n        const inputMode = self.settings.mode;\n        const hashed = hash_key(value);\n        if (hashed && self.items.indexOf(hashed) !== -1) {\n          if (inputMode === 'single') {\n            self.close();\n          }\n          if (inputMode === 'single' || !self.settings.duplicates) {\n            return;\n          }\n        }\n        if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n        if (inputMode === 'single') self.clear(silent);\n        if (inputMode === 'multi' && self.isFull()) return;\n        item = self._render('item', self.options[hashed]);\n        if (self.control.contains(item)) {\n          // duplicates\n          item = item.cloneNode(true);\n        }\n        wasFull = self.isFull();\n        self.items.splice(self.caretPos, 0, hashed);\n        self.insertAtCaret(item);\n        if (self.isSetup) {\n          // update menu / remove the option (if this is not one item being added as part of series)\n          if (!self.isPending && self.settings.hideSelected) {\n            let option = self.getOption(hashed);\n            let next = self.getAdjacent(option, 1);\n            if (next) {\n              self.setActiveOption(next);\n            }\n          }\n\n          // refreshOptions after setActiveOption(),\n          // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n          if (!self.isPending && !self.settings.closeAfterSelect) {\n            self.refreshOptions(self.isFocused && inputMode !== 'single');\n          }\n\n          // hide the menu if the maximum number of items have been selected or no options are left\n          if (self.settings.closeAfterSelect != false && self.isFull()) {\n            self.close();\n          } else if (!self.isPending) {\n            self.positionDropdown();\n          }\n          self.trigger('item_add', hashed, item);\n          if (!self.isPending) {\n            self.updateOriginalInput({\n              silent: silent\n            });\n          }\n        }\n        if (!self.isPending || !wasFull && self.isFull()) {\n          self.inputState();\n          self.refreshState();\n        }\n      });\n    }\n\n    /**\n     * Removes the selected item matching\n     * the provided value.\n     *\n     */\n    removeItem(item = null, silent) {\n      const self = this;\n      item = self.getItem(item);\n      if (!item) return;\n      var i, idx;\n      const value = item.dataset.value;\n      i = nodeIndex(item);\n      item.remove();\n      if (item.classList.contains('active')) {\n        idx = self.activeItems.indexOf(item);\n        self.activeItems.splice(idx, 1);\n        removeClasses(item, 'active');\n      }\n      self.items.splice(i, 1);\n      self.lastQuery = null;\n      if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n        self.removeOption(value, silent);\n      }\n      if (i < self.caretPos) {\n        self.setCaret(self.caretPos - 1);\n      }\n      self.updateOriginalInput({\n        silent: silent\n      });\n      self.refreshState();\n      self.positionDropdown();\n      self.trigger('item_remove', value, item);\n    }\n\n    /**\n     * Invokes the `create` method provided in the\n     * TomSelect options that should provide the data\n     * for the new item, given the user input.\n     *\n     * Once this completes, it will be added\n     * to the item list.\n     *\n     */\n    createItem(input = null, callback = () => {}) {\n      // triggerDropdown parameter @deprecated 2.1.1\n      if (arguments.length === 3) {\n        callback = arguments[2];\n      }\n      if (typeof callback != 'function') {\n        callback = () => {};\n      }\n      var self = this;\n      var caret = self.caretPos;\n      var output;\n      input = input || self.inputValue();\n      if (!self.canCreate(input)) {\n        callback();\n        return false;\n      }\n      self.lock();\n      var created = false;\n      var create = data => {\n        self.unlock();\n        if (!data || typeof data !== 'object') return callback();\n        var value = hash_key(data[self.settings.valueField]);\n        if (typeof value !== 'string') {\n          return callback();\n        }\n        self.setTextboxValue();\n        self.addOption(data, true);\n        self.setCaret(caret);\n        self.addItem(value);\n        callback(data);\n        created = true;\n      };\n      if (typeof self.settings.create === 'function') {\n        output = self.settings.create.call(this, input, create);\n      } else {\n        output = {\n          [self.settings.labelField]: input,\n          [self.settings.valueField]: input\n        };\n      }\n      if (!created) {\n        create(output);\n      }\n      return true;\n    }\n\n    /**\n     * Re-renders the selected item lists.\n     */\n    refreshItems() {\n      var self = this;\n      self.lastQuery = null;\n      if (self.isSetup) {\n        self.addItems(self.items);\n      }\n      self.updateOriginalInput();\n      self.refreshState();\n    }\n\n    /**\n     * Updates all state-dependent attributes\n     * and CSS classes.\n     */\n    refreshState() {\n      const self = this;\n      self.refreshValidityState();\n      const isFull = self.isFull();\n      const isLocked = self.isLocked;\n      self.wrapper.classList.toggle('rtl', self.rtl);\n      const wrap_classList = self.wrapper.classList;\n      wrap_classList.toggle('focus', self.isFocused);\n      wrap_classList.toggle('disabled', self.isDisabled);\n      wrap_classList.toggle('readonly', self.isReadOnly);\n      wrap_classList.toggle('required', self.isRequired);\n      wrap_classList.toggle('invalid', !self.isValid);\n      wrap_classList.toggle('locked', isLocked);\n      wrap_classList.toggle('full', isFull);\n      wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n      wrap_classList.toggle('dropdown-active', self.isOpen);\n      wrap_classList.toggle('has-options', isEmptyObject(self.options));\n      wrap_classList.toggle('has-items', self.items.length > 0);\n    }\n\n    /**\n     * Update the `required` attribute of both input and control input.\n     *\n     * The `required` property needs to be activated on the control input\n     * for the error to be displayed at the right place. `required` also\n     * needs to be temporarily deactivated on the input since the input is\n     * hidden and can't show errors.\n     */\n    refreshValidityState() {\n      var self = this;\n      if (!self.input.validity) {\n        return;\n      }\n      self.isValid = self.input.validity.valid;\n      self.isInvalid = !self.isValid;\n    }\n\n    /**\n     * Determines whether or not more items can be added\n     * to the control without exceeding the user-defined maximum.\n     *\n     * @returns {boolean}\n     */\n    isFull() {\n      return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n    }\n\n    /**\n     * Refreshes the original <select> or <input>\n     * element to reflect the current state.\n     *\n     */\n    updateOriginalInput(opts = {}) {\n      const self = this;\n      var option, label;\n      const empty_option = self.input.querySelector('option[value=\"\"]');\n      if (self.is_select_tag) {\n        const selected = [];\n        const has_selected = self.input.querySelectorAll('option:checked').length;\n        function AddSelected(option_el, value, label) {\n          if (!option_el) {\n            option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n          }\n\n          // don't move empty option from top of list\n          // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n          if (option_el != empty_option) {\n            self.input.append(option_el);\n          }\n          selected.push(option_el);\n\n          // marking empty option as selected can break validation\n          // fixes https://github.com/orchidjs/tom-select/issues/303\n          if (option_el != empty_option || has_selected > 0) {\n            option_el.selected = true;\n          }\n          return option_el;\n        }\n\n        // unselect all selected options\n        self.input.querySelectorAll('option:checked').forEach(option_el => {\n          option_el.selected = false;\n        });\n\n        // nothing selected?\n        if (self.items.length == 0 && self.settings.mode == 'single') {\n          AddSelected(empty_option, \"\", \"\");\n\n          // order selected <option> tags for values in self.items\n        } else {\n          self.items.forEach(value => {\n            option = self.options[value];\n            label = option[self.settings.labelField] || '';\n            if (selected.includes(option.$option)) {\n              const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n              AddSelected(reuse_opt, value, label);\n            } else {\n              option.$option = AddSelected(option.$option, value, label);\n            }\n          });\n        }\n      } else {\n        self.input.value = self.getValue();\n      }\n      if (self.isSetup) {\n        if (!opts.silent) {\n          self.trigger('change', self.getValue());\n        }\n      }\n    }\n\n    /**\n     * Shows the autocomplete dropdown containing\n     * the available options.\n     */\n    open() {\n      var self = this;\n      if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n      self.isOpen = true;\n      setAttr(self.focus_node, {\n        'aria-expanded': 'true'\n      });\n      self.refreshState();\n      applyCSS(self.dropdown, {\n        visibility: 'hidden',\n        display: 'block'\n      });\n      self.positionDropdown();\n      applyCSS(self.dropdown, {\n        visibility: 'visible',\n        display: 'block'\n      });\n      self.focus();\n      self.trigger('dropdown_open', self.dropdown);\n    }\n\n    /**\n     * Closes the autocomplete dropdown menu.\n     */\n    close(setTextboxValue = true) {\n      var self = this;\n      var trigger = self.isOpen;\n      if (setTextboxValue) {\n        // before blur() to prevent form onchange event\n        self.setTextboxValue();\n        if (self.settings.mode === 'single' && self.items.length) {\n          self.inputState();\n        }\n      }\n      self.isOpen = false;\n      setAttr(self.focus_node, {\n        'aria-expanded': 'false'\n      });\n      applyCSS(self.dropdown, {\n        display: 'none'\n      });\n      if (self.settings.hideSelected) {\n        self.clearActiveOption();\n      }\n      self.refreshState();\n      if (trigger) self.trigger('dropdown_close', self.dropdown);\n    }\n\n    /**\n     * Calculates and applies the appropriate\n     * position of the dropdown if dropdownParent = 'body'.\n     * Otherwise, position is determined by css\n     */\n    positionDropdown() {\n      if (this.settings.dropdownParent !== 'body') {\n        return;\n      }\n      var context = this.control;\n      var rect = context.getBoundingClientRect();\n      var top = context.offsetHeight + rect.top + window.scrollY;\n      var left = rect.left + window.scrollX;\n      applyCSS(this.dropdown, {\n        width: rect.width + 'px',\n        top: top + 'px',\n        left: left + 'px'\n      });\n    }\n\n    /**\n     * Resets / clears all selected items\n     * from the control.\n     *\n     */\n    clear(silent) {\n      var self = this;\n      if (!self.items.length) return;\n      var items = self.controlChildren();\n      iterate$1(items, item => {\n        self.removeItem(item, true);\n      });\n      self.inputState();\n      if (!silent) self.updateOriginalInput();\n      self.trigger('clear');\n    }\n\n    /**\n     * A helper method for inserting an element\n     * at the current caret position.\n     *\n     */\n    insertAtCaret(el) {\n      const self = this;\n      const caret = self.caretPos;\n      const target = self.control;\n      target.insertBefore(el, target.children[caret] || null);\n      self.setCaret(caret + 1);\n    }\n\n    /**\n     * Removes the current selected item(s).\n     *\n     */\n    deleteSelection(e) {\n      var direction, selection, caret, tail;\n      var self = this;\n      direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n      selection = getSelection(self.control_input);\n\n      // determine items that will be removed\n      const rm_items = [];\n      if (self.activeItems.length) {\n        tail = getTail(self.activeItems, direction);\n        caret = nodeIndex(tail);\n        if (direction > 0) {\n          caret++;\n        }\n        iterate$1(self.activeItems, item => rm_items.push(item));\n      } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n        const items = self.controlChildren();\n        let rm_item;\n        if (direction < 0 && selection.start === 0 && selection.length === 0) {\n          rm_item = items[self.caretPos - 1];\n        } else if (direction > 0 && selection.start === self.inputValue().length) {\n          rm_item = items[self.caretPos];\n        }\n        if (rm_item !== undefined) {\n          rm_items.push(rm_item);\n        }\n      }\n      if (!self.shouldDelete(rm_items, e)) {\n        return false;\n      }\n      preventDefault(e, true);\n\n      // perform removal\n      if (typeof caret !== 'undefined') {\n        self.setCaret(caret);\n      }\n      while (rm_items.length) {\n        self.removeItem(rm_items.pop());\n      }\n      self.inputState();\n      self.positionDropdown();\n      self.refreshOptions(false);\n      return true;\n    }\n\n    /**\n     * Return true if the items should be deleted\n     */\n    shouldDelete(items, evt) {\n      const values = items.map(item => item.dataset.value);\n\n      // allow the callback to abort\n      if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * Selects the previous / next item (depending on the `direction` argument).\n     *\n     * > 0 - right\n     * < 0 - left\n     *\n     */\n    advanceSelection(direction, e) {\n      var last_active,\n        adjacent,\n        self = this;\n      if (self.rtl) direction *= -1;\n      if (self.inputValue().length) return;\n\n      // add or remove to active items\n      if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n        last_active = self.getLastActive(direction);\n        if (last_active) {\n          if (!last_active.classList.contains('active')) {\n            adjacent = last_active;\n          } else {\n            adjacent = self.getAdjacent(last_active, direction, 'item');\n          }\n\n          // if no active item, get items adjacent to the control input\n        } else if (direction > 0) {\n          adjacent = self.control_input.nextElementSibling;\n        } else {\n          adjacent = self.control_input.previousElementSibling;\n        }\n        if (adjacent) {\n          if (adjacent.classList.contains('active')) {\n            self.removeActiveItem(last_active);\n          }\n          self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n        }\n\n        // move caret to the left or right\n      } else {\n        self.moveCaret(direction);\n      }\n    }\n    moveCaret(direction) {}\n\n    /**\n     * Get the last active item\n     *\n     */\n    getLastActive(direction) {\n      let last_active = this.control.querySelector('.last-active');\n      if (last_active) {\n        return last_active;\n      }\n      var result = this.control.querySelectorAll('.active');\n      if (result) {\n        return getTail(result, direction);\n      }\n    }\n\n    /**\n     * Moves the caret to the specified index.\n     *\n     * The input must be moved by leaving it in place and moving the\n     * siblings, due to the fact that focus cannot be restored once lost\n     * on mobile webkit devices\n     *\n     */\n    setCaret(new_pos) {\n      this.caretPos = this.items.length;\n    }\n\n    /**\n     * Return list of item dom elements\n     *\n     */\n    controlChildren() {\n      return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n    }\n\n    /**\n     * Disables user input on the control. Used while\n     * items are being asynchronously created.\n     */\n    lock() {\n      this.setLocked(true);\n    }\n\n    /**\n     * Re-enables user input on the control.\n     */\n    unlock() {\n      this.setLocked(false);\n    }\n\n    /**\n     * Disable or enable user input on the control\n     */\n    setLocked(lock = this.isReadOnly || this.isDisabled) {\n      this.isLocked = lock;\n      this.refreshState();\n    }\n\n    /**\n     * Disables user input on the control completely.\n     * While disabled, it cannot receive focus.\n     */\n    disable() {\n      this.setDisabled(true);\n      this.close();\n    }\n\n    /**\n     * Enables the control so that it can respond\n     * to focus and user input.\n     */\n    enable() {\n      this.setDisabled(false);\n    }\n    setDisabled(disabled) {\n      this.focus_node.tabIndex = disabled ? -1 : this.tabIndex;\n      this.isDisabled = disabled;\n      this.input.disabled = disabled;\n      this.control_input.disabled = disabled;\n      this.setLocked();\n    }\n    setReadOnly(isReadOnly) {\n      this.isReadOnly = isReadOnly;\n      this.input.readOnly = isReadOnly;\n      this.control_input.readOnly = isReadOnly;\n      this.setLocked();\n    }\n\n    /**\n     * Completely destroys the control and\n     * unbinds all event listeners so that it can\n     * be garbage collected.\n     */\n    destroy() {\n      var self = this;\n      var revertSettings = self.revertSettings;\n      self.trigger('destroy');\n      self.off();\n      self.wrapper.remove();\n      self.dropdown.remove();\n      self.input.innerHTML = revertSettings.innerHTML;\n      self.input.tabIndex = revertSettings.tabIndex;\n      removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n      self._destroy();\n      delete self.input.tomselect;\n    }\n\n    /**\n     * A helper method for rendering \"item\" and\n     * \"option\" templates, given the data.\n     *\n     */\n    render(templateName, data) {\n      var id, html;\n      const self = this;\n      if (typeof this.settings.render[templateName] !== 'function') {\n        return null;\n      }\n\n      // render markup\n      html = self.settings.render[templateName].call(this, data, escape_html);\n      if (!html) {\n        return null;\n      }\n      html = getDom(html);\n\n      // add mandatory attributes\n      if (templateName === 'option' || templateName === 'option_create') {\n        if (data[self.settings.disabledField]) {\n          setAttr(html, {\n            'aria-disabled': 'true'\n          });\n        } else {\n          setAttr(html, {\n            'data-selectable': ''\n          });\n        }\n      } else if (templateName === 'optgroup') {\n        id = data.group[self.settings.optgroupValueField];\n        setAttr(html, {\n          'data-group': id\n        });\n        if (data.group[self.settings.disabledField]) {\n          setAttr(html, {\n            'data-disabled': ''\n          });\n        }\n      }\n      if (templateName === 'option' || templateName === 'item') {\n        const value = get_hash(data[self.settings.valueField]);\n        setAttr(html, {\n          'data-value': value\n        });\n\n        // make sure we have some classes if a template is overwritten\n        if (templateName === 'item') {\n          addClasses(html, self.settings.itemClass);\n          setAttr(html, {\n            'data-ts-item': ''\n          });\n        } else {\n          addClasses(html, self.settings.optionClass);\n          setAttr(html, {\n            role: 'option',\n            id: data.$id\n          });\n\n          // update cache\n          data.$div = html;\n          self.options[value] = data;\n        }\n      }\n      return html;\n    }\n\n    /**\n     * Type guarded rendering\n     *\n     */\n    _render(templateName, data) {\n      const html = this.render(templateName, data);\n      if (html == null) {\n        throw 'HTMLElement expected';\n      }\n      return html;\n    }\n\n    /**\n     * Clears the render cache for a template. If\n     * no template is given, clears all render\n     * caches.\n     *\n     */\n    clearCache() {\n      iterate$1(this.options, option => {\n        if (option.$div) {\n          option.$div.remove();\n          delete option.$div;\n        }\n      });\n    }\n\n    /**\n     * Removes a value from item and option caches\n     *\n     */\n    uncacheValue(value) {\n      const option_el = this.getOption(value);\n      if (option_el) option_el.remove();\n    }\n\n    /**\n     * Determines whether or not to display the\n     * create item prompt, given a user input.\n     *\n     */\n    canCreate(input) {\n      return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n    }\n\n    /**\n     * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n     *\n     * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n     *\n     * });\n     */\n    hook(when, method, new_fn) {\n      var self = this;\n      var orig_method = self[method];\n      self[method] = function () {\n        var result, result_new;\n        if (when === 'after') {\n          result = orig_method.apply(self, arguments);\n        }\n        result_new = new_fn.apply(self, arguments);\n        if (when === 'instead') {\n          return result_new;\n        }\n        if (when === 'before') {\n          result = orig_method.apply(self, arguments);\n        }\n        return result;\n      };\n    }\n  }\n\n  /**\n   * Plugin: \"change_listener\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function change_listener() {\n    addEvent(this.input, 'change', () => {\n      this.sync();\n    });\n  }\n\n  /**\n   * Plugin: \"checkbox_options\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function checkbox_options(userOptions) {\n    var self = this;\n    var orig_onOptionSelect = self.onOptionSelect;\n    self.settings.hideSelected = false;\n    const cbOptions = Object.assign({\n      // so that the user may add different ones as well\n      className: \"tomselect-checkbox\",\n      // the following default to the historic plugin's values\n      checkedClassNames: undefined,\n      uncheckedClassNames: undefined\n    }, userOptions);\n    var UpdateChecked = function UpdateChecked(checkbox, toCheck) {\n      if (toCheck) {\n        checkbox.checked = true;\n        if (cbOptions.uncheckedClassNames) {\n          checkbox.classList.remove(...cbOptions.uncheckedClassNames);\n        }\n        if (cbOptions.checkedClassNames) {\n          checkbox.classList.add(...cbOptions.checkedClassNames);\n        }\n      } else {\n        checkbox.checked = false;\n        if (cbOptions.checkedClassNames) {\n          checkbox.classList.remove(...cbOptions.checkedClassNames);\n        }\n        if (cbOptions.uncheckedClassNames) {\n          checkbox.classList.add(...cbOptions.uncheckedClassNames);\n        }\n      }\n    };\n\n    // update the checkbox for an option\n    var UpdateCheckbox = function UpdateCheckbox(option) {\n      setTimeout(() => {\n        var checkbox = option.querySelector('input.' + cbOptions.className);\n        if (checkbox instanceof HTMLInputElement) {\n          UpdateChecked(checkbox, option.classList.contains('selected'));\n        }\n      }, 1);\n    };\n\n    // add checkbox to option template\n    self.hook('after', 'setupTemplates', () => {\n      var orig_render_option = self.settings.render.option;\n      self.settings.render.option = (data, escape_html) => {\n        var rendered = getDom(orig_render_option.call(self, data, escape_html));\n        var checkbox = document.createElement('input');\n        if (cbOptions.className) {\n          checkbox.classList.add(cbOptions.className);\n        }\n        checkbox.addEventListener('click', function (evt) {\n          preventDefault(evt);\n        });\n        checkbox.type = 'checkbox';\n        const hashed = hash_key(data[self.settings.valueField]);\n        UpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1));\n        rendered.prepend(checkbox);\n        return rendered;\n      };\n    });\n\n    // uncheck when item removed\n    self.on('item_remove', value => {\n      var option = self.getOption(value);\n      if (option) {\n        // if dropdown hasn't been opened yet, the option won't exist\n        option.classList.remove('selected'); // selected class won't be removed yet\n        UpdateCheckbox(option);\n      }\n    });\n\n    // check when item added\n    self.on('item_add', value => {\n      var option = self.getOption(value);\n      if (option) {\n        // if dropdown hasn't been opened yet, the option won't exist\n        UpdateCheckbox(option);\n      }\n    });\n\n    // remove items when selected option is clicked\n    self.hook('instead', 'onOptionSelect', (evt, option) => {\n      if (option.classList.contains('selected')) {\n        option.classList.remove('selected');\n        self.removeItem(option.dataset.value);\n        self.refreshOptions();\n        preventDefault(evt, true);\n        return;\n      }\n      orig_onOptionSelect.call(self, evt, option);\n      UpdateCheckbox(option);\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_header\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function clear_button(userOptions) {\n    const self = this;\n    const options = Object.assign({\n      className: 'clear-button',\n      title: 'Clear All',\n      html: data => {\n        return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n      }\n    }, userOptions);\n    self.on('initialize', () => {\n      var button = getDom(options.html(options));\n      button.addEventListener('click', evt => {\n        if (self.isLocked) return;\n        self.clear();\n        if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n          self.addItem('');\n        }\n        evt.preventDefault();\n        evt.stopPropagation();\n      });\n      self.control.appendChild(button);\n    });\n  }\n\n  /**\n   * Plugin: \"drag_drop\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  const insertAfter = (referenceNode, newNode) => {\n    var _referenceNode$parent;\n    (_referenceNode$parent = referenceNode.parentNode) == null || _referenceNode$parent.insertBefore(newNode, referenceNode.nextSibling);\n  };\n  const insertBefore = (referenceNode, newNode) => {\n    var _referenceNode$parent2;\n    (_referenceNode$parent2 = referenceNode.parentNode) == null || _referenceNode$parent2.insertBefore(newNode, referenceNode);\n  };\n  const isBefore = (referenceNode, newNode) => {\n    do {\n      var _newNode;\n      newNode = (_newNode = newNode) == null ? void 0 : _newNode.previousElementSibling;\n      if (referenceNode == newNode) {\n        return true;\n      }\n    } while (newNode && newNode.previousElementSibling);\n    return false;\n  };\n  function drag_drop() {\n    var self = this;\n    if (self.settings.mode !== 'multi') return;\n    var orig_lock = self.lock;\n    var orig_unlock = self.unlock;\n    let sortable = true;\n    let drag_item;\n\n    /**\n     * Add draggable attribute to item\n     */\n    self.hook('after', 'setupTemplates', () => {\n      var orig_render_item = self.settings.render.item;\n      self.settings.render.item = (data, escape) => {\n        const item = getDom(orig_render_item.call(self, data, escape));\n        setAttr(item, {\n          'draggable': 'true'\n        });\n\n        // prevent doc_mousedown (see tom-select.ts)\n        const mousedown = evt => {\n          if (!sortable) preventDefault(evt);\n          evt.stopPropagation();\n        };\n        const dragStart = evt => {\n          drag_item = item;\n          setTimeout(() => {\n            item.classList.add('ts-dragging');\n          }, 0);\n        };\n        const dragOver = evt => {\n          evt.preventDefault();\n          item.classList.add('ts-drag-over');\n          moveitem(item, drag_item);\n        };\n        const dragLeave = () => {\n          item.classList.remove('ts-drag-over');\n        };\n        const moveitem = (targetitem, dragitem) => {\n          if (dragitem === undefined) return;\n          if (isBefore(dragitem, item)) {\n            insertAfter(targetitem, dragitem);\n          } else {\n            insertBefore(targetitem, dragitem);\n          }\n        };\n        const dragend = () => {\n          var _drag_item;\n          document.querySelectorAll('.ts-drag-over').forEach(el => el.classList.remove('ts-drag-over'));\n          (_drag_item = drag_item) == null || _drag_item.classList.remove('ts-dragging');\n          drag_item = undefined;\n          var values = [];\n          self.control.querySelectorAll(`[data-value]`).forEach(el => {\n            if (el.dataset.value) {\n              let value = el.dataset.value;\n              if (value) {\n                values.push(value);\n              }\n            }\n          });\n          self.setValue(values);\n        };\n        addEvent(item, 'mousedown', mousedown);\n        addEvent(item, 'dragstart', dragStart);\n        addEvent(item, 'dragenter', dragOver);\n        addEvent(item, 'dragover', dragOver);\n        addEvent(item, 'dragleave', dragLeave);\n        addEvent(item, 'dragend', dragend);\n        return item;\n      };\n    });\n    self.hook('instead', 'lock', () => {\n      sortable = false;\n      return orig_lock.call(self);\n    });\n    self.hook('instead', 'unlock', () => {\n      sortable = true;\n      return orig_unlock.call(self);\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_header\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function dropdown_header(userOptions) {\n    const self = this;\n    const options = Object.assign({\n      title: 'Untitled',\n      headerClass: 'dropdown-header',\n      titleRowClass: 'dropdown-header-title',\n      labelClass: 'dropdown-header-label',\n      closeClass: 'dropdown-header-close',\n      html: data => {\n        return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n      }\n    }, userOptions);\n    self.on('initialize', () => {\n      var header = getDom(options.html(options));\n      var close_link = header.querySelector('.' + options.closeClass);\n      if (close_link) {\n        close_link.addEventListener('click', evt => {\n          preventDefault(evt, true);\n          self.close();\n        });\n      }\n      self.dropdown.insertBefore(header, self.dropdown.firstChild);\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_input\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function caret_position() {\n    var self = this;\n\n    /**\n     * Moves the caret to the specified index.\n     *\n     * The input must be moved by leaving it in place and moving the\n     * siblings, due to the fact that focus cannot be restored once lost\n     * on mobile webkit devices\n     *\n     */\n    self.hook('instead', 'setCaret', new_pos => {\n      if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n        new_pos = self.items.length;\n      } else {\n        new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n        if (new_pos != self.caretPos && !self.isPending) {\n          self.controlChildren().forEach((child, j) => {\n            if (j < new_pos) {\n              self.control_input.insertAdjacentElement('beforebegin', child);\n            } else {\n              self.control.appendChild(child);\n            }\n          });\n        }\n      }\n      self.caretPos = new_pos;\n    });\n    self.hook('instead', 'moveCaret', direction => {\n      if (!self.isFocused) return;\n\n      // move caret before or after selected items\n      const last_active = self.getLastActive(direction);\n      if (last_active) {\n        const idx = nodeIndex(last_active);\n        self.setCaret(direction > 0 ? idx + 1 : idx);\n        self.setActiveItem();\n        removeClasses(last_active, 'last-active');\n\n        // move caret left or right of current position\n      } else {\n        self.setCaret(self.caretPos + direction);\n      }\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_input\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function dropdown_input() {\n    const self = this;\n    self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n    self.hook('before', 'setup', () => {\n      self.focus_node = self.control;\n      addClasses(self.control_input, 'dropdown-input');\n      const div = getDom('<div class=\"dropdown-input-wrap\">');\n      div.append(self.control_input);\n      self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n      // set a placeholder in the select control\n      const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n      placeholder.placeholder = self.settings.placeholder || '';\n      self.control.append(placeholder);\n    });\n    self.on('initialize', () => {\n      // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n      self.control_input.addEventListener('keydown', evt => {\n        //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n        switch (evt.keyCode) {\n          case KEY_ESC:\n            if (self.isOpen) {\n              preventDefault(evt, true);\n              self.close();\n            }\n            self.clearActiveItems();\n            return;\n          case KEY_TAB:\n            self.focus_node.tabIndex = -1;\n            break;\n        }\n        return self.onKeyDown.call(self, evt);\n      });\n      self.on('blur', () => {\n        self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n      });\n\n      // give the control_input focus when the dropdown is open\n      self.on('dropdown_open', () => {\n        self.control_input.focus();\n      });\n\n      // prevent onBlur from closing when focus is on the control_input\n      const orig_onBlur = self.onBlur;\n      self.hook('instead', 'onBlur', evt => {\n        if (evt && evt.relatedTarget == self.control_input) return;\n        return orig_onBlur.call(self);\n      });\n      addEvent(self.control_input, 'blur', () => self.onBlur());\n\n      // return focus to control to allow further keyboard input\n      self.hook('before', 'close', () => {\n        if (!self.isOpen) return;\n        self.focus_node.focus({\n          preventScroll: true\n        });\n      });\n    });\n  }\n\n  /**\n   * Plugin: \"input_autogrow\" (Tom Select)\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function input_autogrow() {\n    var self = this;\n    self.on('initialize', () => {\n      var test_input = document.createElement('span');\n      var control = self.control_input;\n      test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n      self.wrapper.appendChild(test_input);\n      var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n      for (const style_name of transfer_styles) {\n        // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n        test_input.style[style_name] = control.style[style_name];\n      }\n\n      /**\n       * Set the control width\n       *\n       */\n      var resize = () => {\n        test_input.textContent = control.value;\n        control.style.width = test_input.clientWidth + 'px';\n      };\n      resize();\n      self.on('update item_add item_remove', resize);\n      addEvent(control, 'input', resize);\n      addEvent(control, 'keyup', resize);\n      addEvent(control, 'blur', resize);\n      addEvent(control, 'update', resize);\n    });\n  }\n\n  /**\n   * Plugin: \"input_autogrow\" (Tom Select)\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function no_backspace_delete() {\n    var self = this;\n    var orig_deleteSelection = self.deleteSelection;\n    this.hook('instead', 'deleteSelection', evt => {\n      if (self.activeItems.length) {\n        return orig_deleteSelection.call(self, evt);\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Plugin: \"no_active_items\" (Tom Select)\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function no_active_items() {\n    this.hook('instead', 'setActiveItem', () => {});\n    this.hook('instead', 'selectAll', () => {});\n  }\n\n  /**\n   * Plugin: \"optgroup_columns\" (Tom Select.js)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function optgroup_columns() {\n    var self = this;\n    var orig_keydown = self.onKeyDown;\n    self.hook('instead', 'onKeyDown', evt => {\n      var index, option, options, optgroup;\n      if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n        return orig_keydown.call(self, evt);\n      }\n      self.ignoreHover = true;\n      optgroup = parentMatch(self.activeOption, '[data-group]');\n      index = nodeIndex(self.activeOption, '[data-selectable]');\n      if (!optgroup) {\n        return;\n      }\n      if (evt.keyCode === KEY_LEFT) {\n        optgroup = optgroup.previousSibling;\n      } else {\n        optgroup = optgroup.nextSibling;\n      }\n      if (!optgroup) {\n        return;\n      }\n      options = optgroup.querySelectorAll('[data-selectable]');\n      option = options[Math.min(options.length - 1, index)];\n      if (option) {\n        self.setActiveOption(option);\n      }\n    });\n  }\n\n  /**\n   * Plugin: \"remove_button\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function remove_button(userOptions) {\n    const options = Object.assign({\n      label: '&times;',\n      title: 'Remove',\n      className: 'remove',\n      append: true\n    }, userOptions);\n\n    //options.className = 'remove-single';\n    var self = this;\n\n    // override the render method to add remove button to each item\n    if (!options.append) {\n      return;\n    }\n    var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n    self.hook('after', 'setupTemplates', () => {\n      var orig_render_item = self.settings.render.item;\n      self.settings.render.item = (data, escape) => {\n        var item = getDom(orig_render_item.call(self, data, escape));\n        var close_button = getDom(html);\n        item.appendChild(close_button);\n        addEvent(close_button, 'mousedown', evt => {\n          preventDefault(evt, true);\n        });\n        addEvent(close_button, 'click', evt => {\n          if (self.isLocked) return;\n\n          // propagating will trigger the dropdown to show for single mode\n          preventDefault(evt, true);\n          if (self.isLocked) return;\n          if (!self.shouldDelete([item], evt)) return;\n          self.removeItem(item);\n          self.refreshOptions(false);\n          self.inputState();\n        });\n        return item;\n      };\n    });\n  }\n\n  /**\n   * Plugin: \"restore_on_backspace\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function restore_on_backspace(userOptions) {\n    const self = this;\n    const options = Object.assign({\n      text: option => {\n        return option[self.settings.labelField];\n      }\n    }, userOptions);\n    self.on('item_remove', function (value) {\n      if (!self.isFocused) {\n        return;\n      }\n      if (self.control_input.value.trim() === '') {\n        var option = self.options[value];\n        if (option) {\n          self.setTextboxValue(options.text.call(self, option));\n        }\n      }\n    });\n  }\n\n  /**\n   * Plugin: \"restore_on_backspace\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function virtual_scroll() {\n    const self = this;\n    const orig_canLoad = self.canLoad;\n    const orig_clearActiveOption = self.clearActiveOption;\n    const orig_loadCallback = self.loadCallback;\n    var pagination = {};\n    var dropdown_content;\n    var loading_more = false;\n    var load_more_opt;\n    var default_values = [];\n    if (!self.settings.shouldLoadMore) {\n      // return true if additional results should be loaded\n      self.settings.shouldLoadMore = () => {\n        const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n        if (scroll_percent > 0.9) {\n          return true;\n        }\n        if (self.activeOption) {\n          var selectable = self.selectable();\n          var index = Array.from(selectable).indexOf(self.activeOption);\n          if (index >= selectable.length - 2) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    if (!self.settings.firstUrl) {\n      throw 'virtual_scroll plugin requires a firstUrl() method';\n    }\n\n    // in order for virtual scrolling to work,\n    // options need to be ordered the same way they're returned from the remote data source\n    self.settings.sortField = [{\n      field: '$order'\n    }, {\n      field: '$score'\n    }];\n\n    // can we load more results for given query?\n    const canLoadMore = query => {\n      if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n        return false;\n      }\n      if (query in pagination && pagination[query]) {\n        return true;\n      }\n      return false;\n    };\n    const clearFilter = (option, value) => {\n      if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n        return true;\n      }\n      return false;\n    };\n\n    // set the next url that will be\n    self.setNextUrl = (value, next_url) => {\n      pagination[value] = next_url;\n    };\n\n    // getUrl() to be used in settings.load()\n    self.getUrl = query => {\n      if (query in pagination) {\n        const next_url = pagination[query];\n        pagination[query] = false;\n        return next_url;\n      }\n\n      // if the user goes back to a previous query\n      // we need to load the first page again\n      self.clearPagination();\n      return self.settings.firstUrl.call(self, query);\n    };\n\n    // clear pagination\n    self.clearPagination = () => {\n      pagination = {};\n    };\n\n    // don't clear the active option (and cause unwanted dropdown scroll)\n    // while loading more results\n    self.hook('instead', 'clearActiveOption', () => {\n      if (loading_more) {\n        return;\n      }\n      return orig_clearActiveOption.call(self);\n    });\n\n    // override the canLoad method\n    self.hook('instead', 'canLoad', query => {\n      // first time the query has been seen\n      if (!(query in pagination)) {\n        return orig_canLoad.call(self, query);\n      }\n      return canLoadMore(query);\n    });\n\n    // wrap the load\n    self.hook('instead', 'loadCallback', (options, optgroups) => {\n      if (!loading_more) {\n        self.clearOptions(clearFilter);\n      } else if (load_more_opt) {\n        const first_option = options[0];\n        if (first_option !== undefined) {\n          load_more_opt.dataset.value = first_option[self.settings.valueField];\n        }\n      }\n      orig_loadCallback.call(self, options, optgroups);\n      loading_more = false;\n    });\n\n    // add templates to dropdown\n    //\tloading_more if we have another url in the queue\n    //\tno_more_results if we don't have another url in the queue\n    self.hook('after', 'refreshOptions', () => {\n      const query = self.lastValue;\n      var option;\n      if (canLoadMore(query)) {\n        option = self.render('loading_more', {\n          query: query\n        });\n        if (option) {\n          option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n          load_more_opt = option;\n        }\n      } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n        option = self.render('no_more_results', {\n          query: query\n        });\n      }\n      if (option) {\n        addClasses(option, self.settings.optionClass);\n        dropdown_content.append(option);\n      }\n    });\n\n    // add scroll listener and default templates\n    self.on('initialize', () => {\n      default_values = Object.keys(self.options);\n      dropdown_content = self.dropdown_content;\n\n      // default templates\n      self.settings.render = Object.assign({}, {\n        loading_more: () => {\n          return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n        },\n        no_more_results: () => {\n          return `<div class=\"no-more-results\">No more results</div>`;\n        }\n      }, self.settings.render);\n\n      // watch dropdown content scroll position\n      dropdown_content.addEventListener('scroll', () => {\n        if (!self.settings.shouldLoadMore.call(self)) {\n          return;\n        }\n\n        // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n        if (!canLoadMore(self.lastValue)) {\n          return;\n        }\n\n        // don't call load() too much\n        if (loading_more) return;\n        loading_more = true;\n        self.load.call(self, self.lastValue);\n      });\n    });\n  }\n  TomSelect.define('change_listener', change_listener);\n  TomSelect.define('checkbox_options', checkbox_options);\n  TomSelect.define('clear_button', clear_button);\n  TomSelect.define('drag_drop', drag_drop);\n  TomSelect.define('dropdown_header', dropdown_header);\n  TomSelect.define('caret_position', caret_position);\n  TomSelect.define('dropdown_input', dropdown_input);\n  TomSelect.define('input_autogrow', input_autogrow);\n  TomSelect.define('no_backspace_delete', no_backspace_delete);\n  TomSelect.define('no_active_items', no_active_items);\n  TomSelect.define('optgroup_columns', optgroup_columns);\n  TomSelect.define('remove_button', remove_button);\n  TomSelect.define('restore_on_backspace', restore_on_backspace);\n  TomSelect.define('virtual_scroll', virtual_scroll);\n  return TomSelect;\n});\nvar tomSelect = function (el, opts) {\n  return new TomSelect(el, opts);\n};","map":{"version":3,"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","self","apply","MicroPlugin","Interface","plugins","names","settings","requested","loaded","define","name","fn","initializePlugins","key","queue","Array","isArray","plugin","options","hasOwnProperty","shift","require","loadPlugin","Error","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","p","from","allSubstrings","input","result","start","substring","suba","subresult","tmp","slice","charAt","unshift","code_points","accent_pat","unicode_map","multi_char_reg","max_char_length","latin_convert","latin_condensed","latin","unicode","convert_pat","RegExp","Object","keys","initialize","_code_points","generateMap","normalize","form","asciifold","_asciifold","toLowerCase","generator","code_point_min","code_point_max","composed","String","fromCharCode","folded","code_point","generateSets","unicode_sets","addMatching","to_add","folded_set","patt","match","add","multi_char","set","sort","a","b","multi_char_patt","mapSequence","strings","min_replacement","chars_replaced","map","substringsToPattern","sub_pat","sequencesToPattern","sequences","all","sequence","seq","len","j","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","filtered","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","match_str","overlapping","added_types","has","new_seq","old_seq","getAttr","obj","getAttrNesting","scoreValue","token","weight","score","pos","regex","search","string","propToArray","iterate$1","iterate","object","cmp","Sifter","items","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","s","fld","direction","sort_flds_count","sort_fld","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","_","fn_sort","limit","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","escapeQuery","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","isEmptyObject","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightText","node","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightChildren","nodeType","childNodes","test","tagName","highlightRecursive","removeHighlight","elements","querySelectorAll","prototype","call","parent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","IS_MAC","navigator","userAgent","KEY_SHORTCUT","defaults","optgroups","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","refreshThrottle","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","timeout","setTimeout","loadDebounce","delay","loading","clearTimeout","loadedSearches","debounce_events","types","type","event_args","getSelection","selectionStart","selectionEnd","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","count","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","init_select","optionsMap","group_count","$order","readData","dataset","json","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_textbox","data_raw","values","opt","instance_i","TomSelect","input_arg","user_settings","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isReadOnly","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","refreshTimeout","dir","tomselect","computedStyle","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","control_id","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","e","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","positionDropdown","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","readOnly","setReadOnly","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","optgroup_header","escape","option_create","no_results","not_loading","callbacks","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","hash","addItem","createItem","character","keyCode","which","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","_onInput","refreshOptions","wasFocused","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","changed","getValue","silent","clear","addItems","setMaxItems","eventName","begin","swap","getLastActive","setActiveItemClass","removeActiveItem","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","k","html","has_create_option","active_group","groups","groups_order","same_query","results","active_option","show_dropdown","closest","getGroupFragment","group_order_i","order_group","fragment","group_fragment","createDocumentFragment","opt_value","opt_hash","option_el","getOption","includes","self_optgroup","$id","toString","group_order","group_heading","group_options","header","group_html","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","x","last_item","isPending","wasFull","isFull","insertAtCaret","caret","output","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","reuse_opt","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","setLocked","setDisabled","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","change_listener","checkbox_options","orig_onOptionSelect","cbOptions","checkedClassNames","uncheckedClassNames","UpdateChecked","checkbox","toCheck","checked","UpdateCheckbox","HTMLInputElement","orig_render_option","rendered","prepend","clear_button","title","button","insertAfter","referenceNode","newNode","_referenceNode$parent","nextSibling","_referenceNode$parent2","isBefore","_newNode","drag_drop","orig_lock","orig_unlock","sortable","drag_item","orig_render_item","mousedown","dragStart","dragOver","moveitem","dragLeave","targetitem","dragitem","dragend","_drag_item","dropdown_header","headerClass","titleRowClass","labelClass","closeClass","close_link","caret_position","dropdown_input","div","orig_onBlur","relatedTarget","preventScroll","input_autogrow","test_input","cssText","transfer_styles","style_name","resize","clientWidth","no_backspace_delete","orig_deleteSelection","no_active_items","optgroup_columns","orig_keydown","previousSibling","remove_button","close_button","restore_on_backspace","text","virtual_scroll","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","load_more_opt","default_values","shouldLoadMore","scroll_percent","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","clearPagination","first_option","no_more_results"],"sources":["../../src/contrib/microevent.ts","../../src/contrib/microplugin.ts","../../node_modules/@orchidjs/unicode-variants/dist/esm/regex.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/strings.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/index.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../node_modules/@orchidjs/sifter/lib/utils.ts","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/plugins/change_listener/plugin.ts","../../src/plugins/checkbox_options/plugin.ts","../../src/plugins/clear_button/plugin.ts","../../src/plugins/drag_drop/plugin.ts","../../src/plugins/dropdown_header/plugin.ts","../../src/plugins/caret_position/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/input_autogrow/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/no_active_items/plugin.ts","../../src/plugins/optgroup_columns/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts","../../src/plugins/virtual_scroll/plugin.ts","../../src/tom-select.complete.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n","\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\trefreshThrottle: 300,\n\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * use setTimeout if timeout > 0 \n */\nexport const timeout = (fn:()=>void,timeout:number) => {\n\tif( timeout > 0 ){\n\t\treturn setTimeout(fn,timeout);\n\t}\n\n\tfn.call(null);\n\treturn null;\n}\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\t\tlet $order = 0;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\t\t\t\toption_data.$order\t\t\t= option_data.$order || ++$order;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\toptgroup_data.$order\t\t\t\t\t= optgroup_data.$order || ++$order;\n\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\ttimeout,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isReadOnly\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\tprivate refreshTimeout\t\t\t: null|ReturnType<typeof setTimeout> = null;\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete','spellcheck'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else if( input.readOnly ){\n\t\t\tself.setReadOnly(true);\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\t\n\t\tif( this.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.inputValue();\n\t\tif( this.lastValue === value ) return;\n\t\tthis.lastValue = value;\n\t\t\n\t\tif( value == '' ){\n\t\t\tthis._onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif( this.refreshTimeout ){\n\t\t\tclearTimeout(this.refreshTimeout);\n\t\t}\n\n\t\tthis.refreshTimeout = timeout(()=> {\n\t\t\tthis.refreshTimeout = null;\n\t\t\tthis._onInput();\n\t\t}, this.settings.refreshThrottle);\n\t}\n\n\t_onInput():void {\n\t\tconst value = this.lastValue;\n\n\t\tif( this.settings.shouldLoad.call(this,value) ){\n\t\t\tthis.load(value);\n\t\t}\n\n\t\tthis.refreshOptions();\n\t\tthis.trigger('type', value);\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif( self.isDisabled || self.isReadOnly ){\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.inputState();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.inputState();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.inputState();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif( self.isDisabled || self.isReadOnly) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\n\t\ttype Group = {fragment:DocumentFragment,order:number,optgroup:string}\n\t\tconst groups: {[key:string]:number} = {};\n\t\tconst groups_order:Group[]\t= [];\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option:HTMLElement|null = null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// get fragment for group and the position of the group in group_order\n\t\tconst getGroupFragment = (optgroup:string,order:number):[number,DocumentFragment] => {\n\n\t\t\tlet group_order_i = groups[optgroup];\n\n\t\t\tif( group_order_i !== undefined ){\n\t\t\t\tlet order_group = groups_order[group_order_i];\n\t\t\t\tif( order_group !== undefined ){\n\t\t\t\t\treturn [group_order_i,order_group.fragment];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet group_fragment = document.createDocumentFragment();\n\t\t\tgroup_order_i = groups_order.length;\n\t\t\tgroups_order.push({fragment:group_fragment,order,optgroup});\n\n\t\t\treturn [group_order_i,group_fragment]\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t\t\t\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\n\t\t\t\tlet order = option.$order;\n\t\t\t\tlet self_optgroup = self.optgroups[optgroup];\n\t\t\t\tif( self_optgroup === undefined ){\t\t\t\t\t\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}else{\n\t\t\t\t\torder = self_optgroup.$order;\n\t\t\t\t}\n\n\t\t\t\tconst [group_order_i,group_fragment] = getGroupFragment(optgroup,order);\n\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tif( optgroup != '' ){\n\t\t\t\t\tgroups[optgroup] = group_order_i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\treturn a.order - b.order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (group_order:Group) => {\n\n\t\t\tlet group_fragment = group_order.fragment;\n\t\t\tlet optgroup = group_order.optgroup\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('readonly', self.isReadOnly)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.inputState();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.inputState();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.setLocked(true);\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.setLocked(false);\n\t}\n\n\t/**\n\t * Disable or enable user input on the control\n\t */\n\tsetLocked( lock:boolean = this.isReadOnly || this.isDisabled ){\n\t\tthis.isLocked = lock;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tthis.setDisabled(true);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tthis.setDisabled(false);\n\t}\n\n\tsetDisabled(disabled:boolean){\n\t\tthis.focus_node.tabIndex\t\t= disabled ? -1 : this.tabIndex;\n\t\tthis.isDisabled\t\t\t\t\t= disabled;\n\t\tthis.input.disabled\t\t\t\t= disabled;\n\t\tthis.control_input.disabled\t\t= disabled;\n\t\tthis.setLocked();\n\t}\n\n\tsetReadOnly(isReadOnly:boolean){\n\t\tthis.isReadOnly\t\t\t\t\t= isReadOnly;\n\t\tthis.input.readOnly\t\t\t\t= isReadOnly;\n\t\tthis.control_input.readOnly\t\t= isReadOnly;\n\t\tthis.setLocked();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n","/**\n * Plugin: \"checkbox_options\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\tconst cbOptions : CBOptions = Object.assign({\n\t\t// so that the user may add different ones as well\n\t\tclassName             : \"tomselect-checkbox\",\n\n\t\t// the following default to the historic plugin's values\n\t\tcheckedClassNames     : undefined,\n\t\tuncheckedClassNames   : undefined,\n\t}, userOptions);\n\n\n\tvar UpdateChecked = function(checkbox:HTMLInputElement, toCheck : boolean) {\n\t\tif( toCheck ){\n\t\t\tcheckbox.checked = true;\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t}else{\n\t\t\tcheckbox.checked = false;\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input.' + cbOptions.className);\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tUpdateChecked(checkbox, option.classList.contains('selected'));\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tif (cbOptions.className) {\n\t\t\t\tcheckbox.classList.add(cbOptions.className);\n\t\t\t}\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\t\t\tUpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1) );\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isLocked ) return;\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption, TomItem } from '../../types/index';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { getDom, setAttr } from '../../vanilla';\n\n\nconst insertAfter = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\n}\n\nconst insertBefore = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode);\n}\n\nconst isBefore = (referenceNode:Element|undefined|null, newNode:Element|undefined|null) =>{\n\t\n\tdo{\n\t\tnewNode = newNode?.previousElementSibling;\n\n\t\tif( referenceNode == newNode ){\n\t\t\treturn true;\n\t\t}\n\n\t}while( newNode && newNode.previousElementSibling );\n\n\treturn false;\n}\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\tlet sortable = true;\n\t\tlet drag_item:TomItem|undefined;\n\n\n\t/**\n\t * Add draggable attribute to item\n\t */\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\t\t\tconst item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\t\t\tsetAttr(item,{'draggable':'true'});\n\n\n\t\t\t// prevent doc_mousedown (see tom-select.ts)\n\t\t\tconst mousedown = (evt:Event) => {\n\t\t\t\tif( !sortable ) preventDefault(evt);\n\t\t\t\tevt.stopPropagation();\n\t\t\t}\n\n\t\t\tconst dragStart = (evt:Event) => {\n\t\t\t\tdrag_item = item;\n\t\t\t\t\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\titem.classList.add('ts-dragging');\n\t\t\t\t}, 0);\n\t\t\t\t\n\t\t\t}\n\n\t\t\tconst dragOver = (evt:Event) =>{\n\t\t\t\tevt.preventDefault();\n\t\t\t\titem.classList.add('ts-drag-over');\n\t\t\t\tmoveitem(item,drag_item);\n\t\t\t}\n\n\t\t\tconst dragLeave = () => {\n\t\t\t\titem.classList.remove('ts-drag-over');\n\t\t\t}\n\n\t\t\tconst moveitem = (targetitem:TomItem, dragitem:TomItem|undefined) => {\n\t\t\t\tif( dragitem === undefined ) return;\n\t\t\t\t\n\t\t\t\tif( isBefore(dragitem,item) ){\n\t\t\t\t\tinsertAfter(targetitem,dragitem);\n\t\t\t\t}else{\n\t\t\t\t\tinsertBefore(targetitem,dragitem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst dragend = () => {\n\t\t\t\tdocument.querySelectorAll('.ts-drag-over').forEach(el=> el.classList.remove('ts-drag-over'));\n\t\t\t\tdrag_item?.classList.remove('ts-dragging');\n\t\t\t\tdrag_item = undefined;\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\tself.control.querySelectorAll(`[data-value]`).forEach((el:Element)=> {\n\t\t\t\t\tif( (<HTMLOptionElement>el).dataset.value ){\n\t\t\t\t\t\tlet value = (<HTMLOptionElement>el).dataset.value;\n\t\t\t\t\t\tif( value ){\n\t\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\t\n\n\n\t\t\taddEvent(item,'mousedown', mousedown);\n\t\t\taddEvent(item,'dragstart', dragStart);\n\t\t\taddEvent(item,'dragenter', dragOver)\n\t\t\taddEvent(item,'dragover', dragOver);\n\t\t\taddEvent(item,'dragleave', dragLeave);\n\t\t\taddEvent(item,'dragend', dragend);\n\t\t\t\t\n\t\t\treturn item;\n\t\t}\t\n\t});\n\n\n\n\tself.hook('instead','lock',()=>{\n\t\tsortable = false;\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tsortable = true;\n\t\treturn orig_unlock.call(self);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n","/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\tif( self.isLocked ) return;\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tself.clearPagination();\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\t// clear pagination\n\tself.clearPagination = ():void =>{\n\t\tpagination = {};\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n","import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}